{"version":3,"sources":["actionTypes/index.jsx","actions/index.jsx","components/Topbar/index.jsx","components/Admin/index.jsx","components/Login/index.jsx","components/SalesExecutive/index.jsx","components/Home/index.jsx","components/Admin/addMedicine.jsx","components/Admin/updateInventoryDetails.jsx","components/Admin/viewInventory.jsx","components/Admin/updateExecutiveDetails.jsx","components/Admin/viewTeam.jsx","components/Admin/addSalesExecutive.jsx","components/SalesExecutive/viewOrders.jsx","components/SalesExecutive/createOrder.jsx","components/Admin/showAllOrders.jsx","components/Admin/createOrder.jsx","App.js","reportWebVitals.js","reducer/index.jsx","store/index.jsx","index.js"],"names":["ADMIN_LOGIN","ADMIN_LOGOUT","SALES_LOGIN","SALES_LOGOUT","ADD_MEDICINE","ADD_SALES_EXECUTIVE","CREATE_ORDER","ADD_TO_CART","EMPTY_CART","UPDATE_INVENTORY_LIST","UPDATE_TEAM_LIST","UPDATE_ALL_ORDERS","UPDATE_EXECUTIVE_DETAILS","UPDATE_INVENTORY_DETAILS","USER_ID_FOR_UPDATE","MEDICINE_ID_FOR_UPDATE","updateAllOrders","payload","type","userIdForUpdate","medicineIdForUpdate","createOrder","addToCart","emptyCart","connect","state","loginStatus","dispatch","logOutAdmin","history","useHistory","className","src","alt","onClick","localStorage","setItem","push","style","cursor","class","Admin","to","adminSignedIn","salesSignedIn","useState","loginEmail","setLoginEmail","loginPassword","setLoginPassword","isAdmin","setIsAdmin","getItem","setLoginStatus","onSubmit","e","preventDefault","console","log","alert","placeholder","required","onChange","eVal","target","value","pVal","SalesExecutive","marginTop","adminLogin","salesLogin","add_medicine_to_inventory","addMedicine","medicineName","setMedicineName","manufacturerName","setManufacturerName","price","setPrice","stock","setStock","discount","setDiscount","margin","textAlign","marginLeft","medicineDetails","medicineId","Math","floor","random","inventoryList","JSON","parse","stringify","htmlFor","id","update_inventory_details","updateInventoryDetails","crossClick","medicineDetailsForUpdate","filter","user","updatedManufacturerName","setUpdatedManufacturerName","updatedPrice","setUpdatedPrice","updatedStock","setUpdatedStock","updatedDiscount","setUpdatedDiscount","inventoryListAfterUpdate","indexForUpdate","findIndex","item","disabled","inventory_list_after_delete_ById","updateInventoryList","medicine_id_for_update","isUpdateMedicineForm","setIsUpdateMedicineForm","delete_medicine_by_id","inventoryListAfterDelete","update_medicine_by_id","map","InventoryMedicineCard","props","display","justifyContent","alignItems","teamList","update_executive_details","updateExecutiveDetails","userDetailsForUpdate","salesExecutiveId","firstName","lastName","dob","gender","experience","updatedFirstName","setUpdatedFirstName","updatedLastName","setUpdatedLastName","updatedDob","setUpdatedDob","updatedGender","setUpdatedGender","updatedExperience","setUpdatedExperience","teamListAfterUpdate","team_list_after_delete","updateTeamList","user_id_for_update","isUpdateForm","setIsUpdateForm","delete_sales_executive_by_id","executiveId","teamListAfterDelete","update_sales_executive_by_id","executiveDetails","SalesExecutiveCard","marginRight","add_executive_to_team","addSalesExecutive","setFirstName","setLastName","setDob","setGender","setExperience","allOrders","my_orders_list_after_delete","showCartItem","userId","delete_my_order_by_id","orderId","myOrdersListAfterDelete","order","myOrderDetails","OrderById","customerName","contactNumber","cartItem","totalAmount","reduce","sum","current","itemQty","itemName","borderTop","width","marginBottom","fontWeight","create_order","add_to_cart","empty_cart","setCustomerName","setContactNumber","addToCartName","setAddToCartName","addToCartQty","setAddToCartQty","cartItemDetails","orderDetails","length","orders_list_after_delete","delete_order_by_id","ordersListAfterDelete","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","loginReducer","store","createStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"qeAAaA,EAAc,cACdC,EAAe,eACfC,EAAc,cACdC,EAAe,eACfC,EAAe,eACfC,EAAsB,sBACtBC,EAAe,eACfC,EAAc,cACdC,EAAa,aACbC,EAAwB,wBACxBC,EAAmB,mBACnBC,EAAoB,oBACpBC,EAA2B,2BAC3BC,EAA2B,2BAC3BC,EAAqB,qBACrBC,EAAyB,yBC8BzBC,EAAkB,SAACC,GAAD,MAAc,CACzCC,KAAMP,EACNM,YAeSE,EAAkB,SAACF,GAAD,MAAc,CACzCC,KAAMJ,EACNG,YAGSG,EAAsB,SAACH,GAAD,MAAc,CAC7CC,KAAMH,EACNE,YAOSI,EAAc,SAACJ,GAAD,MAAc,CACrCC,KAAMZ,EACNW,YAGSK,EAAY,SAACL,GAAD,MAAc,CACnCC,KAAMX,EACNU,YAISM,EAAY,SAACN,GAAD,MAAc,CACnCC,KAAMV,EACNS,Y,cCrDWO,eATS,SAACC,GAAD,MAAY,CAChCC,YAAaD,EAAMC,gBAGI,SAACC,GAAD,MAAe,CACtCC,YAAa,kBAAMD,EDzBkB,CACrCT,KAAMjB,EACNgB,QCuBwC,SAI7BO,EA5BA,SAAC,GAAkC,IAAhCE,EAA+B,EAA/BA,YAAaE,EAAkB,EAAlBA,YACrBC,EAAUC,cAEhB,OAAQ,sBAAKC,UAAU,SAAf,UACJ,8BAAK,qBAAKC,IAAI,+EAA+EC,IAAI,mCACjG,qBAAKF,UAAU,cAAf,SACKL,GAAe,oBAAGQ,QAAS,WACxBC,aAAaC,QAAQ,eAAe,GACpCD,aAAaC,QAAQ,cAAc,GACnCD,aAAaC,QAAQ,cAAc,GACnCP,EAAQQ,KAAK,KACbT,KACDU,MAAO,CAAEC,OAAQ,WANJ,oBAMwB,mBAAGC,MAAM,mC,eCE9CC,EAjBD,WAEV,OAAQ,qBAAKV,UAAU,aAAf,SACJ,sBAAKA,UAAU,eAAf,UACI,qBAAIA,UAAU,iBAAd,UAA+B,mBAAGS,MAAM,wBAAxC,gBACA,cAAC,IAAD,CAAME,GAAG,sBAAsBX,UAAU,eAAzC,0BACA,cAAC,IAAD,CAAMW,GAAG,wBAAwBX,UAAU,eAA3C,4BACA,qBAAIA,UAAU,YAAd,UAA0B,mBAAGS,MAAM,wBAAnC,WACA,cAAC,IAAD,CAAME,GAAG,6BAA6BX,UAAU,eAAhD,iCACA,cAAC,IAAD,CAAMW,GAAG,mBAAmBX,UAAU,eAAtC,uBACA,qBAAIA,UAAU,aAAd,UAA2B,mBAAGS,MAAM,yBAApC,aACA,cAAC,IAAD,CAAME,GAAG,yBAAyBX,UAAU,eAA5C,6BACA,cAAC,IAAD,CAAMW,GAAG,uBAAuBX,UAAU,eAA1C,gC,OCmEGP,G,MAAAA,YAAQ,MAPI,SAACG,GAAD,MAAe,CAEtCgB,cAAe,kBAAMhB,EH7Ee,CACpCT,KAAMlB,EACNiB,QG2EyC,MACzC2B,cAAe,kBAAMjB,EHpEe,CACpCT,KAAMhB,EACNe,QGkEyC,SAI9BO,EA5ED,SAAC,GAAsC,IAApCmB,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAsCN,mBAASV,aAAaiB,QAAQ,iBAAkB,GAAtF,mBAAO1B,EAAP,KAAoB2B,EAApB,KACMxB,EAAUC,cAII,UAAhBJ,GACAS,aAAaC,QAAQ,cAAeV,GA6BxC,OAAQ,qBAAKK,UAAU,aAAf,SACJ,uBAAMA,UAAU,aAAauB,SA3Bb,SAACC,GACjBA,EAAEC,iBACFC,QAAQC,IAAIZ,EAAYE,GACpBE,EACmB,eAAfJ,GAAiD,eAAlBE,GAC/BK,GAAe,GACflB,aAAaC,QAAQ,eAAe,GACpCD,aAAaC,QAAQ,cAAc,GACnCP,EAAQQ,KAAK,uBACbM,KAEAgB,MAAM,wBAGS,eAAfb,GAAiD,eAAlBE,GAC/BK,GAAe,GACflB,aAAaC,QAAQ,eAAe,GACpCD,aAAaC,QAAQ,cAAc,GACnCP,EAAQQ,KAAK,iCACbO,KAEAe,MAAM,yBAMd,UAEI,uCACA,sBAAK5B,UAAU,YAAf,UACI,mBAAGA,UAAWmB,EAAU,uBAAyB,SAAUhB,QAAS,kBAAMiB,GAAW,IAArF,mBACA,mBAAGpB,UAAYmB,EAAmC,SAAzB,uBAAmChB,QAAS,kBAAMiB,GAAW,IAAtF,gCAEJ,sBAAKpB,UAAU,cAAf,UAEI,mBAAGS,MAAM,eACT,uBAAOtB,KAAK,OAAOa,UAAU,eAAe6B,YAAY,iBAAiBC,UAAQ,EAC7EC,SAAU,SAACC,GAAD,OAAUhB,EAAcgB,EAAKC,OAAOC,aAGtD,sBAAKlC,UAAU,cAAf,UAEI,mBAAGS,MAAM,mBACT,uBAAOtB,KAAK,WAAWa,UAAU,eAAe6B,YAAY,iBAAiBC,UAAQ,EAACC,SAAU,SAACI,GAC7FjB,EAAiBiB,EAAKF,OAAOC,aAGrC,wBAAQ/C,KAAK,SAASa,UAAU,QAAhC,6BCtDGoC,G,MAVQ,WAEnB,OAAQ,qBAAKpC,UAAU,uBAAf,SACJ,sBAAKA,UAAU,yBAAf,UACI,cAAC,IAAD,CAAMW,GAAG,gCAAgCX,UAAU,yBAAyBO,MAAO,CAAE8B,UAAW,QAAhG,0BACA,cAAC,IAAD,CAAM1B,GAAG,+BAA+BX,UAAU,yBAAlD,gCCmBGP,eAVS,SAACC,GAAD,MAAY,CAChCC,YAAaD,EAAMC,YACnB2C,WAAY5C,EAAM4C,WAClBC,WAAY7C,EAAM6C,cAGK,GAIZ9C,EArBF,SAAC,GAA6C,IAA3CE,EAA0C,EAA1CA,YAAa2C,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAGrC,OAFAb,QAAQC,IAAIhC,GACZ+B,QAAQC,KAAoB,IAAhBhC,GACJ,iCACY,IAAf2C,IAAuC,IAAhB3C,GAAwB,cAAC,EAAD,KAChC,IAAf4C,IAAuC,IAAhB5C,GAAwB,cAAC,EAAD,KAC/B,IAAhBA,GAAyB,cAAE,EAAF,UCsDnBF,G,MAAAA,YAAQ,MAJI,SAACG,GAAD,MAAe,CACtC4C,0BAA2B,SAACtD,GAAD,OAAaU,EN1CjB,SAACV,GAAD,MAAc,CACrCC,KAAMd,EACNa,WMwCiDuD,CAAYvD,QAGlDO,EA5DK,SAAC,GAAmC,IAAjC+C,EAAgC,EAAhCA,0BACnB,EAAwC1B,mBAAS,IAAjD,mBAAO4B,EAAP,KAAqBC,EAArB,KACA,EAAgD7B,mBAAS,IAAzD,mBAAO8B,EAAP,KAAyBC,EAAzB,KACA,EAA0B/B,mBAAS,GAAnC,mBAAOgC,EAAP,KAAcC,EAAd,KACA,EAA0BjC,mBAAS,GAAnC,mBAAOkC,EAAP,KAAcC,EAAd,KACA,EAAgCnC,mBAAS,GAAzC,mBAAOoC,EAAP,KAAiBC,EAAjB,KAqBA,OAAQ,sBAAKnD,UAAU,eAAf,UACJ,cAAC,EAAD,IACA,oBAAIO,MAAO,CAAE6C,OAAQ,OAAQC,UAAW,SAAUC,WAAY,OAA9D,8BACA,uBAAMtD,UAAU,oBAAoBuB,SArBf,SAACC,GACtB,IAAM+B,EAAkB,CAAEb,aAAcA,EAAcE,iBAAkBA,EAAkBE,MAAOA,EAAOE,MAAOA,EAAOE,SAAUA,EAAUM,WAAYC,KAAKC,MAAuB,IAAhBD,KAAKE,SAAwB,IAE/LnC,EAAEC,iBACFD,EAAES,OAAO,GAAGC,MAAQ,GACpBV,EAAES,OAAO,GAAGC,MAAQ,GACpBV,EAAES,OAAO,GAAGC,MAAQ,GACpBV,EAAES,OAAO,GAAGC,MAAQ,GACpBV,EAAES,OAAO,GAAGC,MAAQ,GAEpBM,EAA0Be,GAC1B,IAAIK,EAAgBC,KAAKC,MAAM1D,aAAaiB,QAAQ,mBAAqB,GACzEuC,EAActD,KAAKiD,GACnBnD,aAAaC,QAAQ,gBAAiBwD,KAAKE,UAAUH,KAQrD,UACI,sBAAK5D,UAAU,cAAf,UACI,uBAAOgE,QAAQ,eAAf,2BACA,uBAAO7E,KAAK,OAAOa,UAAU,gBAAgBiE,GAAG,eAAepC,YAAY,gBAAgBE,SAAU,SAACP,GAAQmB,EAAgBnB,EAAES,OAAOC,aAE3I,sBAAKlC,UAAU,cAAf,UACI,uBAAOgE,QAAQ,mBAAf,+BACA,uBAAO7E,KAAK,OAAOa,UAAU,gBAAgBiE,GAAG,mBAAmBpC,YAAY,oBAAoBE,SAAU,SAACP,GAAQqB,EAAoBrB,EAAES,OAAOC,aAEvJ,sBAAKlC,UAAU,cAAf,UACI,uBAAOgE,QAAQ,gBAAf,wBACA,uBAAO7E,KAAK,SAASa,UAAU,gBAAgBiE,GAAG,gBAAgBpC,YAAY,QAAQE,SAAU,SAACP,GAAQuB,EAASvB,EAAES,OAAOC,aAE/H,sBAAKlC,UAAU,cAAf,UACI,uBAAOgE,QAAQ,kBAAf,mBACA,uBAAO7E,KAAK,SAASa,UAAU,gBAAgBiE,GAAG,kBAAkBpC,YAAY,qBAAqBE,SAAU,SAACP,GAAQyB,EAASzB,EAAES,OAAOC,aAE9I,sBAAKlC,UAAU,cAAf,UACI,uBAAOgE,QAAQ,kBAAf,sBACA,uBAAO7E,KAAK,OAAOa,UAAU,gBAAgBiE,GAAG,kBAAkBpC,YAAY,sBAAsBE,SAAU,SAACP,GAAQ2B,EAAY3B,EAAES,OAAOC,aAEhJ,wBAAQ/C,KAAK,SAASa,UAAU,MAAhC,4CCwBGP,G,YAAAA,aATS,SAACC,GAAD,MAAY,CAChCkE,cAAelE,EAAMkE,cACrBvE,oBAAqBK,EAAML,wBAGJ,SAACO,GAAD,MAAe,CACtCsE,yBAA0B,SAAChF,GAAD,OAAaU,EPvBL,SAACV,GAAD,MAAc,CAChDC,KAAML,EACNI,WOqBgDiF,CAAuBjF,QAG5DO,EA3EgB,SAAC,GAAkF,IAAhFJ,EAA+E,EAA/EA,oBAAqBuE,EAA0D,EAA1DA,cAAeM,EAA2C,EAA3CA,yBAA0BE,EAAiB,EAAjBA,WAC5F/E,EAAsBA,GAAuBe,aAAaiB,QAAQ,uBAClE,IAAMgD,EAA2BT,EAAcU,QAAO,SAAAC,GAAI,OAAIA,EAAKf,YAAcnE,KACjF,EAAmEgF,EAAyB,GAApF3B,EAAR,EAAQA,aAAcE,EAAtB,EAAsBA,iBAAkBE,EAAxC,EAAwCA,MAAOE,EAA/C,EAA+CA,MAAOE,EAAtD,EAAsDA,SACtD,EAA8DpC,mBAAS8B,GAAvE,mBAAO4B,EAAP,KAAgCC,EAAhC,KACA,EAAwC3D,mBAASgC,GAAjD,mBAAO4B,EAAP,KAAqBC,EAArB,KACA,EAAwC7D,mBAASkC,GAAjD,mBAAO4B,EAAP,KAAqBC,EAArB,KACA,EAA8C/D,mBAASoC,GAAvD,mBAAO4B,EAAP,KAAwBC,EAAxB,KAEArD,QAAQC,IAAItC,GACZqC,QAAQC,IAAI0C,GAEZ3C,QAAQC,IAAIuB,GAsBZ,OAAQ,qBAAK3C,MAAO,CAAE8C,UAAW,UAAYrD,UAAU,kCAA/C,SACJ,uBAAMA,UAAU,qBAAqBuB,SArBL,SAACC,GACjCA,EAAEC,iBACF,IAAIuD,EAA2BnB,KAAKC,MAAM1D,aAAaiB,QAAQ,mBAAqB,GAC9E4D,EAAiBD,EAAyBE,WAAU,SAAAC,GAAI,OAAIA,EAAK3B,aAAenE,KAEtFqC,QAAQC,IAAIqD,GACZA,EAAyBC,GAAgB/B,SAAW4B,EACpDE,EAAyBC,GAAgBrC,iBAAmB4B,EAC5DQ,EAAyBC,GAAgBnC,MAAQ4B,EACjDM,EAAyBC,GAAgBjC,MAAQ4B,EACjDxE,aAAaC,QAAQ,gBAAiBwD,KAAKE,UAAUiB,IAErD5E,aAAaC,QAAQ,wBAAwB,GAC7C6D,EAAyBc,IAQzB,UACI,mBAAG7E,QAASiE,EAAYpE,UAAU,0BAAlC,SAA4D,mBAAGA,UAAU,mBACzE,sBAAKA,UAAU,cAAf,UACI,uBAAOgE,QAAQ,gBAAf,2BACA,uBAAO7E,KAAK,OAAOa,UAAU,gBAAgBiE,GAAG,gBAAgBpC,YAAY,gBAAgBuD,UAAQ,EAAClD,MAAOQ,OAGhH,sBAAK1C,UAAU,cAAf,UACI,uBAAOgE,QAAQ,mBAAf,+BACA,uBAAO7E,KAAK,OAAOa,UAAU,gBAAgBiE,GAAG,mBAAmBpC,YAAY,oBAAoBE,SAAU,SAACP,GAAQiD,EAA2BjD,EAAES,OAAOC,QAAUA,MAAOsC,OAG/K,sBAAKxE,UAAU,cAAf,UACI,uBAAOgE,QAAQ,QAAf,wBACA,uBAAO7E,KAAK,OAAOa,UAAU,gBAAgBiE,GAAG,QAAQpC,YAAY,QAAQE,SAAU,SAACP,GAAQmD,EAAgBnD,EAAES,OAAOC,QAAUA,MAAOwC,OAE7I,sBAAK1E,UAAU,cAAf,UACI,uBAAOgE,QAAQ,QAAf,mBACA,uBAAO7E,KAAK,SAASa,UAAU,gBAAgBiE,GAAG,QAAQpC,YAAY,iBAAiBE,SAAU,SAACP,GAC9FqD,EAAgBrD,EAAES,OAAOC,QAC1BA,MAAO0C,OAEd,sBAAK5E,UAAU,cAAf,UACI,uBAAOgE,QAAQ,WAAf,sBACA,uBAAO7E,KAAK,OAAOa,UAAU,gBAAgBiE,GAAG,WAAWpC,YAAY,WAAWE,SAAU,SAACP,GAAQuD,EAAmBvD,EAAES,OAAOC,QAAUA,MAAO4C,OAEtJ,wBAAQ3F,KAAK,SAASa,UAAU,OAAhC,qCCLGP,eAXS,SAACC,GAAD,MAAY,CAChCkE,cAAelE,EAAMkE,cACrBvE,oBAAqBK,EAAML,wBAGJ,SAACO,GAAD,MAAe,CACtCyF,iCAAkC,SAACnG,GAAD,OAAaU,ERxBhB,SAACV,GAAD,MAAc,CAC7CC,KAAMT,EACNQ,WQsBwDoG,CAAoBpG,KAC5EqG,uBAAwB,SAACrG,GAAD,OAAaU,EAASP,EAAoBH,QAIvDO,EAtDO,SAAC,GAAiF,IAA/EmE,EAA8E,EAA9EA,cAAeyB,EAA+D,EAA/DA,iCAAkCE,EAA6B,EAA7BA,uBACtE,EAAwDzE,oBAAS,GAAjE,mBAAO0E,EAAP,KAA6BC,EAA7B,KAGMC,EAAwB,SAAChD,GAC3B,IAAIiD,EAA2B9B,KAAKC,MAAM1D,aAAaiB,QAAQ,mBAAqB,GACpFsE,EAA2BA,EAAyBrB,QAAO,SAAAa,GAAI,OAAIA,EAAKzC,eAAiBA,KACzFtC,aAAaC,QAAQ,gBAAiBwD,KAAKE,UAAU4B,IACrDN,EAAiC3C,IAK/BkD,EAAwB,SAAC3B,GAC3BwB,GAAwB,GACxB/D,QAAQC,IAAIsC,GACZ7D,aAAaC,QAAQ,sBAAuB4D,GAC5CsB,EAAuBtB,IAQ3B,OAAQ,sBAAKjE,UAAU,iBAAf,UACJ,cAAC,EAAD,IACCwF,GAAwB,cAAC,EAAD,CAAwBnG,oBAAqBA,EAAqB+E,WAP5E,WACf1C,QAAQC,IAAI,WACZ8D,GAAwB,MAOxB,sBAAKzF,UAAU,sBAAf,UACI,sBAAKA,UAAU,6BAAf,UACI,yCACA,6CACA,sCACA,yCACA,4CAEH4D,EAAciC,KAAI,SAAAV,GAAI,OAAI,cAAC,EAAD,CAAuB5B,gBAAiB4B,EAAMO,sBAAuBA,EAA2CE,sBAAuBA,GAAtCnC,KAAKE,sBAuBvImC,EAAwB,SAACC,GAC3B,MAA+EA,EAAMxC,gBAA7Eb,EAAR,EAAQA,aAAcE,EAAtB,EAAsBA,iBAAkBE,EAAxC,EAAwCA,MAAOE,EAA/C,EAA+CA,MAAOE,EAAtD,EAAsDA,SAAUM,EAAhE,EAAgEA,WAGhE,OACI,sBAAKjD,MAAO,CAAEyF,QAAS,OAAQC,eAAgB,SAAUC,WAAY,UAArE,UACI,sBAAKlG,UAAU,gBAAf,UACI,sBAAMA,UAAU,gBAAhB,SAAiC0C,IACjC,sBAAM1C,UAAU,oBAAhB,SAAqC4C,IACrC,sBAAM5C,UAAU,iBAAhB,SAAkC8C,IAClC,sBAAM9C,UAAU,oBAAhB,SAAqCgD,IACrC,sBAAMhD,UAAU,oBAAhB,SAAqCkD,MALLO,KAAKE,UAOzC,sBAAKpD,MAAO,CAAE+C,WAAY,OAAQ9C,OAAQ,WAAaL,QAAS,kBAAM4F,EAAML,sBAAsBhD,IAAlG,cAAmH,mBAAG1C,UAAU,oBAChI,sBAAKO,MAAO,CAAEC,OAAQ,UAAW8C,WAAY,QAAUnD,QAAS,kBAAM4F,EAAMH,sBAAsBpC,IAAlG,cAAiH,mBAAGxD,UAAU,uBCH3HP,G,MAAAA,aATS,SAACC,GAAD,MAAY,CAChCyG,SAAUzG,EAAMyG,SAChB/G,gBAAiBM,EAAMN,oBAGA,SAACQ,GAAD,MAAe,CACtCwG,yBAA0B,SAAClH,GAAD,OAAaU,ET1BL,SAACV,GAAD,MAAc,CAChDC,KAAMN,EACNK,WSwBgDmH,CAAuBnH,QAG5DO,EAzEgB,SAAC,GAAyE,IAAvEL,EAAsE,EAAtEA,gBAAiB+G,EAAqD,EAArDA,SAAUC,EAA2C,EAA3CA,yBAA0BhC,EAAiB,EAAjBA,WACnFhF,EAAkBA,GAAmBgB,aAAaiB,QAAQ,mBAC1D,IAAMiF,EAAuBH,EAAS7B,QAAO,SAAAC,GAAI,OAAIA,EAAKgC,kBAAoBnH,KAC9EsC,QAAQC,IAAI2E,EAAqB,IACjC,MAAyDA,EAAqB,GAAtEE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAAUC,EAA7B,EAA6BA,IAAKC,EAAlC,EAAkCA,OAAQC,EAA1C,EAA0CA,WAC1C,EAAgD9F,mBAAS0F,GAAzD,mBAAOK,EAAP,KAAyBC,EAAzB,KACA,EAA8ChG,mBAAS2F,GAAvD,mBAAOM,EAAP,KAAwBC,EAAxB,KACA,EAAoClG,mBAAS4F,GAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KACA,EAA0CpG,mBAAS6F,GAAnD,mBAAOQ,EAAP,KAAsBC,EAAtB,KACA,EAAkDtG,mBAAS8F,GAA3D,mBAAOS,EAAP,KAA0BC,EAA1B,KAwBA,OAAQ,qBAAK/G,MAAO,CAAE8C,UAAW,UAAYrD,UAAU,kCAA/C,SACJ,uBAAMA,UAAU,qBAAqBuB,SAtBJ,SAACC,GAClCA,EAAEC,iBACF,IAAI8F,EAAsB1D,KAAKC,MAAM1D,aAAaiB,QAAQ,cAAgB,GACpE4D,EAAiBsC,EAAoBrC,WAAU,SAAAC,GAAI,OAAIA,EAAKoB,mBAAqBnH,KAEvFsC,QAAQC,IAAI4F,GACZA,EAAoBtC,GAAgBuB,UAAYK,EAChDU,EAAoBtC,GAAgBwB,SAAWM,EAC/CQ,EAAoBtC,GAAgByB,IAAMO,EAC1CM,EAAoBtC,GAAgB0B,OAASQ,EAC7CI,EAAoBtC,GAAgB2B,WAAaS,EACjDjH,aAAaC,QAAQ,WAAYwD,KAAKE,UAAUwD,IAEhDnH,aAAaC,QAAQ,gBAAgB,GACrC+F,EAAyBmB,IAQzB,UACI,mBAAGpH,QAASiE,EAAYpE,UAAU,0BAAlC,SAA4D,mBAAGA,UAAU,mBACzE,sBAAKA,UAAU,cAAf,UACI,uBAAOgE,QAAQ,YAAf,wBACA,uBAAO7E,KAAK,OAAOa,UAAU,gBAAgBiE,GAAG,YAAYpC,YAAY,aAAaE,SAAU,SAACP,GAAQsF,EAAoBtF,EAAES,OAAOC,QAAUA,MAAO2E,OAE1J,sBAAK7G,UAAU,cAAf,UACI,uBAAOgE,QAAQ,WAAf,uBACA,uBAAO7E,KAAK,OAAOa,UAAU,gBAAgBiE,GAAG,WAAWpC,YAAY,YAAYE,SAAU,SAACP,GAAQwF,EAAmBxF,EAAES,OAAOC,QAAUA,MAAO6E,OAEvJ,sBAAK/G,UAAU,cAAf,UACI,uBAAOgE,QAAQ,MAAf,iBACA,uBAAO7E,KAAK,OAAOa,UAAU,gBAAgBiE,GAAG,MAAMpC,YAAY,MAAME,SAAU,SAACP,GAAQ0F,EAAc1F,EAAES,OAAOC,QAAUA,MAAO+E,OAEvI,sBAAKjH,UAAU,cAAf,UACI,uBAAOgE,QAAQ,SAAf,yBACA,uBAAO7E,KAAK,OAAOa,UAAU,gBAAgBiE,GAAG,SAASpC,YAAY,SAASE,SAAU,SAACP,GAAQ4F,EAAiB5F,EAAES,OAAOC,QAAUA,MAAOiF,OAEhJ,sBAAKnH,UAAU,cAAf,UACI,uBAAOgE,QAAQ,aAAf,wBACA,uBAAO7E,KAAK,SAASa,UAAU,gBAAgBiE,GAAG,aAAapC,YAAY,sBAAsBE,SAAU,SAACP,GAExG8F,EAAqB9F,EAAES,OAAOC,QAC/BA,MAAOmF,OAEd,wBAAQlI,KAAK,SAASa,UAAU,OAAhC,qCCJGP,eAVS,SAACC,GAAD,MAAY,CAChCyG,SAAUzG,EAAMyG,SAChB/G,gBAAiBM,EAAMN,oBAGA,SAACQ,GAAD,MAAe,CACtC4H,uBAAwB,SAACtI,GAAD,OAAaU,EVnBX,SAACV,GAAD,MAAc,CACxCC,KAAMR,EACNO,WUiB8CuI,CAAevI,KAC7DwI,mBAAoB,SAACxI,GAAD,OAAaU,EAASR,EAAgBF,QAG/CO,EArDE,SAAC,GAA8D,IAA5D0G,EAA2D,EAA3DA,SAAUqB,EAAiD,EAAjDA,uBAAwBE,EAAyB,EAAzBA,mBAClD,EAAwC5G,oBAAS,GAAjD,mBAAO6G,EAAP,KAAqBC,EAArB,KAEMC,EAA+B,SAACC,GAClCpG,QAAQC,IAAImG,GACZ,IAAIC,EAAsBlE,KAAKC,MAAM1D,aAAaiB,QAAQ,cAAgB,GAC1E0G,EAAsBA,EAAoBzD,QAAO,SAAAa,GAAI,OAAIA,EAAKoB,mBAAqBuB,KACnF1H,aAAaC,QAAQ,WAAYwD,KAAKE,UAAUgE,IAChDP,EAAuBM,IAIrBE,EAA+B,SAAC/D,GAClC2D,GAAgB,GAChBxH,aAAaC,QAAQ,kBAAmB4D,GACxCyD,EAAmBzD,IASvB,OAAQ,sBAAKjE,UAAU,YAAf,UACJ,cAAC,EAAD,IACC2H,GAAgB,cAAC,EAAD,CAAwBvI,gBAAiBA,EAAiBgF,WAP5D,WACf1C,QAAQC,IAAI,WACZiG,GAAgB,MAMhB,sBAAK5H,UAAU,iBAAf,UACI,sBAAKA,UAAU,wBAAf,UACI,mBAAGA,UAAU,qBAAb,oBACA,mBAAGA,UAAU,wBAAb,wBACA,mBAAGA,UAAU,wBAAb,uBACA,mBAAGA,UAAU,sBAAb,iBACA,mBAAGA,UAAU,yBAAb,oBACA,mBAAGA,UAAU,6BAAb,2BAEHmG,EAASN,KAAI,SAAAV,GAAI,OAAI,cAAC,EAAD,CAAoB8C,iBAAkB9C,EAAM0C,6BAA8BA,EAAkDG,6BAA8BA,GAA7CvE,KAAKE,sBAuB9IuE,EAAqB,SAACnC,GACxB,MAA2EA,EAAMkC,iBAAzEzB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAAUC,EAA7B,EAA6BA,IAAKC,EAAlC,EAAkCA,OAAQC,EAA1C,EAA0CA,WAAYL,EAAtD,EAAsDA,iBACtD,OACI,sBAAKhG,MAAO,CAAEyF,QAAS,OAAQC,eAAgB,SAAUC,WAAY,UAArE,UACI,sBAAKlG,UAAU,uBAAf,UACI,sBAAMA,UAAU,qBAAhB,SAAsCuG,IACtC,sBAAMvG,UAAU,wBAAhB,SAAyCwG,IACzC,sBAAMxG,UAAU,wBAAhB,SAAyCyG,IACzC,sBAAMzG,UAAU,sBAAhB,SAAuC0G,IACvC,sBAAM1G,UAAU,yBAAhB,SAA0C2G,IAC1C,sBAAM3G,UAAU,6BAAhB,SAA8C4G,MANPnD,KAAKE,UAQhD,sBAAKpD,MAAO,CAAE+C,WAAY,OAAQ9C,OAAQ,UAAW2H,YAAa,QAAUhI,QAAS,kBAAM4F,EAAM8B,6BAA6BtB,IAA9H,cAAmJ,mBAAGvG,UAAU,oBAChK,sBAAKO,MAAO,CAAEC,OAAQ,WAAaL,QAAS,kBAAM4F,EAAMiC,6BAA6BzB,IAArF,cAA0G,mBAAGvG,UAAU,uBCbpHP,G,MAAAA,YAAQ,MAJI,SAACG,GAAD,MAAe,CACtCwI,sBAAuB,SAAClJ,GAAD,OAAaU,EXrCP,SAACV,GAAD,MAAc,CAC3CC,KAAMb,EACNY,WWmC6CmJ,CAAkBnJ,QAGpDO,EA3DK,SAAC,GAA+B,IAA7B2I,EAA4B,EAA5BA,sBACnB,EAAkCtH,mBAAS,IAA3C,mBAAO0F,EAAP,KAAkB8B,EAAlB,KACA,EAAgCxH,mBAAS,IAAzC,mBAAO2F,EAAP,KAAiB8B,EAAjB,KACA,EAAsBzH,mBAAS,IAA/B,mBAAO4F,EAAP,KAAY8B,EAAZ,KACA,EAA4B1H,mBAAS,IAArC,mBAAO6F,EAAP,KAAe8B,EAAf,KACA,EAAoC3H,mBAAS,GAA7C,mBAAO8F,EAAP,KAAmB8B,EAAnB,KAoBA,OAAQ,sBAAK1I,UAAU,eAAf,UACJ,cAAC,EAAD,IACA,oBAAIO,MAAO,CAAE6C,OAAQ,OAAQC,UAAW,SAAUC,WAAY,OAA9D,+BACA,uBAAMtD,UAAU,6BAA6BuB,SArBxB,SAACC,GACtB,IAAMyG,EAAmB,CAAEzB,UAAWA,EAAWC,SAAUA,EAAUC,IAAKA,EAAKC,OAAQA,EAAQC,WAAYA,EAAYL,iBAAkB9C,KAAKC,MAAuB,IAAhBD,KAAKE,SAAwB,IAElLnC,EAAEC,iBACFD,EAAES,OAAO,GAAGC,MAAQ,GACpBV,EAAES,OAAO,GAAGC,MAAQ,GACpBV,EAAES,OAAO,GAAGC,MAAQ,GACpBV,EAAES,OAAO,GAAGC,MAAQ,GACpBV,EAAES,OAAO,GAAGC,MAAQ,GAEpBkG,EAAsBH,GACtB,IAAI9B,EAAWtC,KAAKC,MAAM1D,aAAaiB,QAAQ,cAAgB,GAC/D8E,EAAS7F,KAAK2H,GACd7H,aAAaC,QAAQ,WAAYwD,KAAKE,UAAUoC,KAQhD,UACI,sBAAKnG,UAAU,cAAf,UACI,uBAAOgE,QAAQ,YAAf,wBACA,uBAAO7E,KAAK,OAAOa,UAAU,gBAAgBiE,GAAG,YAAYpC,YAAY,aAAaE,SAAU,SAACP,GAAQ8G,EAAa9G,EAAES,OAAOC,aAElI,sBAAKlC,UAAU,cAAf,UACI,uBAAOgE,QAAQ,WAAf,uBACA,uBAAO7E,KAAK,OAAOa,UAAU,gBAAgBiE,GAAG,WAAWpC,YAAY,YAAYE,SAAU,SAACP,GAAQ+G,EAAY/G,EAAES,OAAOC,aAE/H,sBAAKlC,UAAU,cAAf,UACI,uBAAOgE,QAAQ,MAAf,iBACA,uBAAO7E,KAAK,OAAOa,UAAU,gBAAgBiE,GAAG,MAAMpC,YAAY,MAAME,SAAU,SAACP,GAAQgH,EAAOhH,EAAES,OAAOC,aAE/G,sBAAKlC,UAAU,cAAf,UACI,uBAAOgE,QAAQ,SAAf,yBACA,uBAAO7E,KAAK,OAAOa,UAAU,gBAAgBiE,GAAG,SAASpC,YAAY,SAASE,SAAU,SAACP,GAAQiH,EAAUjH,EAAES,OAAOC,aAExH,sBAAKlC,UAAU,cAAf,UACI,uBAAOgE,QAAQ,aAAf,wBACA,uBAAO7E,KAAK,SAASa,UAAU,gBAAgBiE,GAAG,aAAapC,YAAY,sBAAsBE,SAAU,SAACP,GAAQkH,EAAclH,EAAES,OAAOC,aAE/I,wBAAQ/C,KAAK,SAASa,UAAU,OAAhC,uCCrBGP,G,MAAAA,aARS,SAACC,GAAD,MAAY,CAChCiJ,UAAWjJ,EAAMiJ,cAGM,SAAC/I,GAAD,MAAe,CACtCgJ,4BAA6B,SAAC1J,GAAcU,EAASX,EAAgBC,QAG1DO,EA9BI,SAAC,GAAgD,IAA9CkJ,EAA6C,EAA7CA,UAAWC,EAAkC,EAAlCA,4BAC7BlH,QAAQC,IAAIgH,GACZ,IAAME,EAAeF,EAAUrE,QAAO,SAAAa,GAAI,OAAoB,QAAhBA,EAAK2D,UAC7CC,EAAwB,SAACC,GAC3BtH,QAAQC,IAAIqH,GACZ,IAAIC,EAA0BpF,KAAKC,MAAM1D,aAAaiB,QAAQ,eAAiB,GAC/E4H,EAA0BA,EAAwB3E,QAAO,SAAAa,GAAI,OAAIA,EAAK6D,UAAYA,KAClF5I,aAAaC,QAAQ,YAAawD,KAAKE,UAAUkF,IACjDL,EAA4BI,IAGhC,OAAQ,sBAAKhJ,UAAU,eAAf,UACJ,cAAC,EAAD,IACA,oBAAIO,MAAO,CAAE8C,UAAW,SAAUhB,UAAW,QAA7C,uBAECwG,EAAahD,KAAI,SAAAqD,GAAK,OAAI,cAAC,EAAD,CAA+BC,eAAgBD,EACtEH,sBAAuBA,GADgBtF,KAAKE,oBAkBlDyF,EAAY,SAACrD,GACf,MAA2DA,EAAMoD,eAAzDE,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,cAAeN,EAArC,EAAqCA,QAASO,EAA9C,EAA8CA,SACxCC,EAAcD,EAASE,QAAO,SAAUC,EAAKC,GAC/C,OAAOD,EAA0B,GAAnBC,EAAQC,UACvB,GACH,OACI,sBAAK5J,UAAU,gBAAf,UACI,sBAAKA,UAAU,wBAAf,UACI,gDAAkB,+BAAOqJ,OACzB,iDAAmB,+BAAOC,OAC1B,4CAAc,+BAAON,UAEzB,sBAAKhJ,UAAU,oBAAf,UACI,oBAAIA,UAAU,iBAAd,kBACA,0CACA,2CAEHuJ,EAAS1D,KAAI,SAAAV,GAAI,OACd,sBAAKnF,UAAU,oBAAf,UACI,mBAAGA,UAAU,iBAAb,SAA+BmF,EAAK0E,WACpC,4BAAI1E,EAAKyE,UACT,4BAAmB,GAAfzE,EAAKyE,YAH2BnG,KAAKE,aAMhD,mBAAGpD,MAAO,CAAEuJ,UAAW,iBAAkBC,MAAO,OAAQ1H,UAAW,OAAQ2H,aAAc,KACzF,qBAAKzJ,MAAO,CAAE8B,UAAW,OAAzB,SACG,qBAAI9B,MAAO,CAAE6C,OAAQ,EAAGE,WAAY,MAAOjB,UAAW,QAAtD,4BAA+E,sBAAM9B,MAAO,CAAE0J,WAAY,KAA3B,SAAmCT,SAEtH,sBAAKxJ,UAAU,oBAAoBG,QAAS,kBAAM4F,EAAMgD,sBAAsBC,IAA9E,cAA0F,mBAAGhJ,UAAU,sBAtBvEgJ,ICgE7BvJ,G,MAAAA,aAVS,SAACC,GAAD,MAAY,CAChC6J,SAAU7J,EAAM6J,aAGO,SAAC3J,GAAD,MAAe,CACtCsK,aAAc,SAAChL,GAAD,OAAaU,EAASN,EAAYJ,KAChDiL,YAAa,SAACjL,GAAD,OAAaU,EAASL,EAAUL,KAC7CkL,WAAY,kBAAMxK,EAASJ,SAGhBC,EArGc,SAAC,GAAyD,IAAvDyK,EAAsD,EAAtDA,aAAcC,EAAwC,EAAxCA,YAAaZ,EAA2B,EAA3BA,SAAUa,EAAiB,EAAjBA,WACjE,EAAwCtJ,mBAAS,IAAjD,mBAAOuI,EAAP,KAAqBgB,EAArB,KACA,EAA0CvJ,mBAAS,IAAnD,mBAAOwI,EAAP,KAAsBgB,EAAtB,KACA,EAA0CxJ,mBAAS,IAAnD,mBAAOyJ,EAAP,KAAsBC,EAAtB,KACA,EAAwC1J,mBAAS,IAAjD,mBAAO2J,EAAP,KAAqBC,EAArB,KAiCMlB,EAAcD,EAASE,QAAO,SAAUC,EAAKC,GAC/C,OAAOD,EAA0B,GAAnBC,EAAQC,UACvB,GAEH,OAAQ,sBAAK5J,UAAU,eAAf,UACJ,cAAC,EAAD,IACA,oBAAIO,MAAO,CAAE6C,OAAQ,OAAQC,UAAW,SAAUC,WAAY,OAA9D,2BACA,sBAAK/C,MAAO,CAAEyF,QAAS,OAAQC,eAAgB,UAA/C,UACI,sBAAKjG,UAAU,cAAf,UACI,wBAAOb,KAAK,OAAO4C,SAAU,SAACP,GAAD,OAAOgJ,EAAiBhJ,EAAES,OAAOC,QAA9D,sBAA+E,uBAAOlC,UAAU,sBAChG,wBAAO+B,SAAU,SAACP,GAAD,OAAOkJ,EAAgBlJ,EAAES,OAAOC,QAAjD,sBAAkE,uBAAO/C,KAAK,SAASa,UAAU,sBACjG,gDAAmB,MACnB,wBAAQA,UAAU,OAAOG,QAvBb,SAACqB,GAErB,IAAMmJ,EAAkB,CAAEd,SAAUU,EAAeX,QAASa,IAE5DlB,EAAW1F,KAAKC,MAAM1D,aAAaiB,QAAQ,cAAgB,IAClDf,KAAKqK,GACdvK,aAAaC,QAAQ,WAAYwD,KAAKE,UAAUwF,IAChDY,EAAYQ,IAgBJ,4BAEJ,uBAAM3K,UAAU,oBAAoBuB,SA5CnB,SAACC,GACtB,IAAMoJ,EAAe,CAAEvB,aAAcA,EAAcC,cAAeA,EAAeC,SAAUA,EAAUP,QAASvF,KAAKC,MAAuB,IAAhBD,KAAKE,SAAwB,GAAImF,OAAQ,OAEnKtH,EAAEC,iBACFD,EAAES,OAAO,GAAGC,MAAQ,GACpBV,EAAES,OAAO,GAAGC,MAAQ,GAEpBgI,EAAaU,GACb,IAAIjC,EAAY9E,KAAKC,MAAM1D,aAAaiB,QAAQ,eAAiB,GACjEsH,EAAUrI,KAAKsK,GACfxK,aAAaC,QAAQ,YAAawD,KAAKE,UAAU4E,IAIjDvI,aAAaC,QAAQ,WAAYwD,KAAKE,UAAU,KAChDqG,KA6BI,UACI,sBAAKpK,UAAU,oBAAf,UACI,sBAAKA,UAAU,cAAf,UACI,uBAAOgE,QAAQ,eAAf,2BACA,uBAAO7E,KAAK,OAAOa,UAAU,gBAAgBiE,GAAG,eAAepC,YAAY,gBAAgBE,SAAU,SAACP,GAAQ6I,EAAgB7I,EAAES,OAAOC,QAAUJ,UAAQ,OAE7J,sBAAK9B,UAAU,cAAf,UACI,uBAAOgE,QAAQ,gBAAf,4BACA,uBAAO7E,KAAK,OAAOa,UAAU,gBAAgBiE,GAAG,gBAAgBpC,YAAY,iBAAiBE,SAAU,SAACP,GAAQ8I,EAAiB9I,EAAES,OAAOC,QAAUJ,UAAQ,UAInKyH,EAASsB,OAAS,GAAK,sBAAK7K,UAAU,mBAAf,UACpB,mBAAGA,UAAU,iBAAb,kBACA,yCACA,0CAEHuJ,EAAS1D,KAAI,SAAAV,GAAI,OACd,sBAAKnF,UAAU,oBAAf,UACI,mBAAGA,UAAU,iBAAb,SAA+BmF,EAAK0E,WACpC,4BAAI1E,EAAKyE,UACT,4BAAmB,GAAfzE,EAAKyE,YAH2BnG,KAAKE,aAMhD4F,EAASsB,OAAS,GAAK,mBAAGtK,MAAO,CAAEuJ,UAAW,iBAAkBC,MAAO,QAAS1H,UAAW,OAAQ2H,aAAc,KACjHT,EAASsB,OAAS,GAAK,qBAAKtK,MAAO,CAAE8B,UAAW,OAAzB,SACpB,qBAAI9B,MAAO,CAAE6C,OAAQ,EAAGE,WAAY,SAApC,4BAA8D,sBAAM/C,MAAO,CAAE0J,WAAY,KAA3B,SAAmCT,SAGrG,wBAAQrK,KAAK,SAASa,UAAU,OAAhC,0BACA,mBAAGA,UAAU,oBAAoBG,QAAS,WACtCiK,KADJ,qCCxDD3K,G,MAAAA,aARS,SAACC,GAAD,MAAY,CAChCiJ,UAAWjJ,EAAMiJ,cAGM,SAAC/I,GAAD,MAAe,CACtCkL,yBAA0B,SAAC5L,GAAD,OAAaU,EAASX,EAAgBC,QAGrDO,EA1BI,SAAC,GAA6C,IAA3CkJ,EAA0C,EAA1CA,UAAWmC,EAA+B,EAA/BA,yBAEvBC,EAAqB,SAAC/B,GACxBtH,QAAQC,IAAIqH,GACZ,IAAIgC,EAAwBnH,KAAKC,MAAM1D,aAAaiB,QAAQ,eAAiB,GAC7E2J,EAAwBA,EAAsB1G,QAAO,SAAAa,GAAI,OAAIA,EAAK6D,UAAYA,KAC9E5I,aAAaC,QAAQ,YAAawD,KAAKE,UAAUiH,IACjDF,EAAyB9B,IAE7B,OAAQ,sBAAKhJ,UAAU,eAAf,UACJ,cAAC,EAAD,IACA,oBAAIO,MAAO,CAAE8C,UAAW,SAAUhB,UAAW,OAAQiB,WAAY,SAAjE,wBACCqF,EAAU9C,KAAI,SAAAqD,GAAK,OAAI,cAAC,EAAD,CAA+BC,eAAgBD,EAAO6B,mBAAoBA,GAA1DtH,KAAKE,oBAiB/CyF,EAAY,SAACrD,GACf,MAA2DA,EAAMoD,eAAzDE,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,cAAeN,EAArC,EAAqCA,QAASO,EAA9C,EAA8CA,SACxCC,EAAcD,EAASE,QAAO,SAAUC,EAAKC,GAC/C,OAAOD,EAA0B,GAAnBC,EAAQC,UACvB,GACH,OACI,sBAAK5J,UAAU,gBAAgBO,MAAO,CAAEwJ,MAAO,OAA/C,UACI,sBAAK/J,UAAU,wBAAf,UACI,gDAAkB,+BAAOqJ,OACzB,iDAAmB,+BAAOC,OAC1B,4CAAc,+BAAON,UAEzB,sBAAKhJ,UAAU,oBAAf,UACI,oBAAIA,UAAU,iBAAd,kBACA,0CACA,2CAEHuJ,EAAS1D,KAAI,SAAAV,GAAI,OACd,sBAAKnF,UAAU,oBAAf,UACI,mBAAGA,UAAU,iBAAb,SAA+BmF,EAAK0E,WACpC,4BAAI1E,EAAKyE,UACT,4BAAmB,GAAfzE,EAAKyE,YAH2BnG,KAAKE,aAMhD,mBAAGpD,MAAO,CAAEuJ,UAAW,iBAAkBC,MAAO,OAAQ1H,UAAW,OAAQ2H,aAAc,KACzF,qBAAKzJ,MAAO,CAAE8B,UAAW,OAAzB,SACG,qBAAI9B,MAAO,CAAE6C,OAAQ,EAAGE,WAAY,MAAOjB,UAAW,QAAtD,4BAA+E,sBAAM9B,MAAO,CAAE0J,WAAY,KAA3B,SAAmCT,SAEtH,sBAAKxJ,UAAU,oBAAoBG,QAAS,kBAAM4F,EAAMgF,mBAAmB/B,IAA3E,cAAuF,mBAAGhJ,UAAU,wBC0CjGP,eAVS,SAACC,GAAD,MAAY,CAChC6J,SAAU7J,EAAM6J,aAGO,SAAC3J,GAAD,MAAe,CACtCsK,aAAc,SAAChL,GAAD,OAAaU,EAASN,EAAYJ,KAChDiL,YAAa,SAACjL,GAAD,OAAaU,EAASL,EAAUL,KAC7CkL,WAAY,kBAAMxK,EAASJ,SAGhBC,EAlGU,SAAC,GAAyD,IAAvDyK,EAAsD,EAAtDA,aAAcC,EAAwC,EAAxCA,YAAaZ,EAA2B,EAA3BA,SAAUa,EAAiB,EAAjBA,WAC7D,EAAwCtJ,mBAAS,IAAjD,mBAAOuI,EAAP,KAAqBgB,EAArB,KACA,EAA0CvJ,mBAAS,IAAnD,mBAAOwI,EAAP,KAAsBgB,EAAtB,KACA,EAA0CxJ,mBAAS,IAAnD,mBAAOyJ,EAAP,KAAsBC,EAAtB,KACA,EAAwC1J,mBAAS,IAAjD,mBAAO2J,EAAP,KAAqBC,EAArB,KA8BMlB,EAAcD,EAASE,QAAO,SAAUC,EAAKC,GAC/C,OAAOD,EAA0B,GAAnBC,EAAQC,UACvB,GAEH,OAAQ,sBAAK5J,UAAU,eAAf,UACJ,cAAC,EAAD,IACA,oBAAIO,MAAO,CAAE6C,OAAQ,OAAQC,UAAW,SAAUC,WAAY,OAA9D,2BACA,sBAAK/C,MAAO,CAAEyF,QAAS,OAAQC,eAAgB,UAA/C,UACI,sBAAKjG,UAAU,cAAf,UACI,wBAAOb,KAAK,OAAO4C,SAAU,SAACP,GAAD,OAAOgJ,EAAiBhJ,EAAES,OAAOC,QAA9D,sBAA+E,uBAAOlC,UAAU,sBAChG,wBAAOb,KAAK,SAAS4C,SAAU,SAACP,GAAD,OAAOkJ,EAAgBlJ,EAAES,OAAOC,QAA/D,sBAAgF,uBAAO/C,KAAK,SAASa,UAAU,sBAC/G,gDAAmB,MACnB,wBAAQA,UAAU,OAAOG,QAtBb,SAACqB,GAErB,IAAMmJ,EAAkB,CAAEd,SAAUU,EAAeX,QAASa,IAE5DlB,EAAW1F,KAAKC,MAAM1D,aAAaiB,QAAQ,cAAgB,IAClDf,KAAKqK,GACdvK,aAAaC,QAAQ,WAAYwD,KAAKE,UAAUwF,IAChDY,EAAYQ,IAeJ,4BAEJ,uBAAM3K,UAAU,oBAAoBuB,SAxCnB,SAACC,GACtB,IAAMoJ,EAAe,CAAEvB,aAAcA,EAAcC,cAAeA,EAAeC,SAAUA,EAAUP,QAASvF,KAAKC,MAAuB,IAAhBD,KAAKE,SAAwB,IAEvJnC,EAAEC,iBACFD,EAAES,OAAO,GAAGC,MAAQ,GACpBV,EAAES,OAAO,GAAGC,MAAQ,GAEpBgI,EAAaU,GACb,IAAIjC,EAAY9E,KAAKC,MAAM1D,aAAaiB,QAAQ,eAAiB,GACjEsH,EAAUrI,KAAKsK,GACfxK,aAAaC,QAAQ,YAAawD,KAAKE,UAAU4E,IAGjDvI,aAAaC,QAAQ,WAAYwD,KAAKE,UAAU,KAChDqG,KA0BI,UACI,sBAAKpK,UAAU,oBAAf,UACI,sBAAKA,UAAU,cAAf,UACI,uBAAOgE,QAAQ,eAAf,2BACA,uBAAO7E,KAAK,OAAOa,UAAU,gBAAgBiE,GAAG,eAAepC,YAAY,gBAAgBE,SAAU,SAACP,GAAQ6I,EAAgB7I,EAAES,OAAOC,QAAUJ,UAAQ,OAE7J,sBAAK9B,UAAU,cAAf,UACI,uBAAOgE,QAAQ,gBAAf,4BACA,uBAAO7E,KAAK,OAAOa,UAAU,gBAAgBiE,GAAG,gBAAgBpC,YAAY,iBAAiBE,SAAU,SAACP,GAAQ8I,EAAiB9I,EAAES,OAAOC,QAAUJ,UAAQ,UAInKyH,EAASsB,OAAS,GAAK,sBAAK7K,UAAU,mBAAf,UACpB,mBAAGA,UAAU,iBAAb,kBACA,yCACA,0CAEHuJ,EAAS1D,KAAI,SAAAV,GAAI,OACd,sBAAKnF,UAAU,oBAAf,UACI,mBAAGA,UAAU,iBAAb,SAA+BmF,EAAK0E,WACpC,4BAAI1E,EAAKyE,UACT,4BAAmB,GAAfzE,EAAKyE,YAH2BnG,KAAKE,aAMhD4F,EAASsB,OAAS,GAAK,mBAAGtK,MAAO,CAAEuJ,UAAW,iBAAkBC,MAAO,QAAS1H,UAAW,OAAQ2H,aAAc,KACjHT,EAASsB,OAAS,GAAK,qBAAKtK,MAAO,CAAE8B,UAAW,OAAzB,SACpB,qBAAI9B,MAAO,CAAE6C,OAAQ,EAAGE,WAAY,SAApC,4BAA8D,sBAAM/C,MAAO,CAAE0J,WAAY,KAA3B,SAAmCT,SAGrG,wBAAQrK,KAAK,SAASa,UAAU,OAAhC,0BACA,mBAAGA,UAAU,oBAAoBG,QAAS,WACtCiK,KADJ,oCC5ChB,IAOe3K,eAPS,SAACC,GAAD,MAAY,CAClC4C,WAAY5C,EAAM4C,WAClB3C,YAAaD,EAAMC,YACnB4C,WAAY7C,EAAM6C,cAIoB,KAAzB9C,EAhCf,YAAuD,IAAxC6C,EAAuC,EAAvCA,WAAY3C,EAA2B,EAA3BA,YAAa4C,EAAc,EAAdA,WACtC,OACE,8BACE,eAAC,IAAD,WACE,cAAC,EAAD,IACCb,QAAQC,IAAIW,EAAY3C,GACzB,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsL,KAAK,IAAIC,OAAK,EAArB,SAAsB,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,SAASC,OAAK,EAA1B,SAA2B,cAAC,EAAD,MAC1B5I,GAAc3C,GAAe,eAAC,IAAD,CAAOsL,KAAK,IAAIC,OAAK,EAArB,UAAsB,cAAC,EAAD,IAAtB,OAC7B5I,GAAc3C,GAAe,eAAC,IAAD,CAAOsL,KAAK,sBAAZ,UAAkC,cAAC,EAAD,IAAlC,OAC7B3I,GAAc3C,GAAe,eAAC,IAAD,CAAOsL,KAAK,wBAAZ,UAAoC,cAAC,EAAD,IAApC,OAC7B3I,GAAc3C,GAAe,eAAC,IAAD,CAAOsL,KAAK,6BAAZ,UAAyC,cAAC,EAAD,IAAzC,OAC7B3I,GAAc3C,GAAe,eAAC,IAAD,CAAOsL,KAAK,mBAAZ,UAA+B,cAAC,EAAD,IAA/B,OAC7B3I,GAAc3C,GAAe,eAAC,IAAD,CAAOsL,KAAK,yBAAZ,UAAqC,cAAC,EAAD,IAArC,OAC7B3I,GAAc3C,GAAe,eAAC,IAAD,CAAOsL,KAAK,uBAAZ,UAAmC,cAAC,EAAD,IAAnC,OAC7B1I,GAAc5C,GAAe,cAAC,IAAD,CAAOsL,KAAK,gCAAZ,SAA4C,cAAC,EAAD,MACzE1I,GAAc5C,GAAe,eAAC,IAAD,CAAOsL,KAAK,+BAAZ,UAA2C,cAAC,EAAD,IAA3C,kBCvBzBE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,0BCLRQ,GAAe,CACjBjM,YAAqD,SAAxCS,aAAaiB,QAAQ,eAClCiB,WAAmD,SAAvClC,aAAaiB,QAAQ,cACjCkB,WAAmD,SAAvCnC,aAAaiB,QAAQ,cACjCuC,cAAeC,KAAKC,MAAM1D,aAAaiB,QAAQ,mBAAqB,GACpE8E,SAAUtC,KAAKC,MAAM1D,aAAaiB,QAAQ,cAAgB,GAC1DsH,UAAW9E,KAAKC,MAAM1D,aAAaiB,QAAQ,eAAiB,GAC5DkI,SAAU1F,KAAKC,MAAM1D,aAAaiB,QAAQ,cAAgB,GAC1DjC,gBAAiBgB,aAAaiB,QAAQ,mBACtChC,oBAAqBe,aAAaiB,QAAQ,wBA2C/BwK,GAxCM,WAA8C,IAA7CnM,EAA4C,uDAApCkM,GAAoC,yCAApBzM,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,QAChD,OAAQC,GACJ,KAAKlB,EACD,OAAO,6BAAKyB,GAAZ,IAAmBC,aAAa,EAAM2C,YAAY,IACtD,KAAKpE,EACD,OAAO,6BAAKwB,GAAZ,IAAmBC,aAAa,EAAO2C,YAAY,IACvD,KAAKnE,EACD,OAAO,6BAAKuB,GAAZ,IAAmBC,aAAa,EAAM4C,YAAY,IACtD,KAAKnE,EACD,OAAO,6BAAKsB,GAAZ,IAAmBC,aAAa,EAAO4C,YAAY,IACvD,KAAKlE,EACD,OAAO,6BAAKqB,GAAZ,IAAmBkE,cAAc,GAAD,oBAAMlE,EAAMkE,eAAZ,CAA2B1E,MAC/D,KAAKZ,EACD,OAAO,6BAAKoB,GAAZ,IAAmByG,SAAS,GAAD,oBAAMzG,EAAMyG,UAAZ,CAAsBjH,MACrD,KAAKX,EACD,OAAO,6BAAKmB,GAAZ,IAAmBiJ,UAAU,GAAD,oBAAMjJ,EAAMiJ,WAAZ,CAAuBzJ,MACvD,KAAKV,EACD,OAAO,6BAAKkB,GAAZ,IAAmB6J,SAAS,GAAD,oBAAM7J,EAAM6J,UAAZ,CAAsBrK,MACrD,KAAKT,EACD,OAAO,6BAAKiB,GAAZ,IAAmB6J,SAAU,KACjC,KAAK7K,EACD,OAAO,6BAAKgB,GAAZ,IAAmBkE,cAAelE,EAAMkE,cAAcU,QAAO,SAAAa,GAAI,OAAIA,EAAKzC,eAAiBxD,OAC/F,KAAKP,EACD,OAAO,6BAAKe,GAAZ,IAAmByG,SAAUzG,EAAMyG,SAAS7B,QAAO,SAAAa,GAAI,OAAIA,EAAKoB,mBAAqBrH,OACzF,KAAKN,EACD,OAAO,6BAAKc,GAAZ,IAAmBiJ,UAAWjJ,EAAMiJ,UAAUrE,QAAO,SAAAa,GAAI,OAAIA,EAAK6D,UAAY9J,OAClF,KAAKL,EACD,OAAO,6BAAKa,GAAZ,IAAmByG,SAAUjH,IACjC,KAAKJ,EACD,OAAO,6BAAKY,GAAZ,IAAmBkE,cAAe1E,IACtC,KAAKF,EACD,OAAO,6BAAKU,GAAZ,IAAmBL,oBAAqBH,IAC5C,KAAKH,EACD,OAAO,6BAAKW,GAAZ,IAAmBN,gBAAiBF,IACxC,QACI,OAAOQ,IC5CJoM,GAFDC,aAAYC,ICK1BC,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACE,cAAC,EAAD,MAEFK,SAASC,eAAe,SAM1BjB,M","file":"static/js/main.e0c3ef27.chunk.js","sourcesContent":["export const ADMIN_LOGIN = 'ADMIN_LOGIN';\nexport const ADMIN_LOGOUT = 'ADMIN_LOGOUT';\nexport const SALES_LOGIN = 'SALES_LOGIN';\nexport const SALES_LOGOUT = 'SALES_LOGOUT';\nexport const ADD_MEDICINE = 'ADD_MEDICINE';\nexport const ADD_SALES_EXECUTIVE = 'ADD_SALES_EXECUTIVE';\nexport const CREATE_ORDER = 'CREATE_ORDER';\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const EMPTY_CART = 'EMPTY_CART';\nexport const UPDATE_INVENTORY_LIST = 'UPDATE_INVENTORY_LIST';\nexport const UPDATE_TEAM_LIST = 'UPDATE_TEAM_LIST';\nexport const UPDATE_ALL_ORDERS = 'UPDATE_ALL_ORDERS';\nexport const UPDATE_EXECUTIVE_DETAILS = 'UPDATE_EXECUTIVE_DETAILS';\nexport const UPDATE_INVENTORY_DETAILS = 'UPDATE_INVENTORY_DETAILS';\nexport const USER_ID_FOR_UPDATE = 'USER_ID_FOR_UPDATE';\nexport const MEDICINE_ID_FOR_UPDATE = 'MEDICINE_ID_FOR_UPDATE'","import { ADMIN_LOGIN, ADMIN_LOGOUT, SALES_LOGIN, SALES_LOGOUT, ADD_MEDICINE, ADD_SALES_EXECUTIVE, CREATE_ORDER, ADD_TO_CART, EMPTY_CART, UPDATE_INVENTORY_LIST, UPDATE_TEAM_LIST, UPDATE_ALL_ORDERS, UPDATE_EXECUTIVE_DETAILS, USER_ID_FOR_UPDATE, MEDICINE_ID_FOR_UPDATE, UPDATE_MEDICINE_DETAILS, UPDATE_INVENTORY_DETAILS } from \"../actionTypes\"\n\nexport const adminLogin = (payload) => ({\n    type: ADMIN_LOGIN,\n    payload\n})\n\nexport const adminLogout = (payload) => ({\n    type: ADMIN_LOGOUT,\n    payload\n})\n\nexport const salesLogin = (payload) => ({\n    type: SALES_LOGIN,\n    payload\n})\n\nexport const salesLogout = (payload) => ({\n    type: SALES_LOGOUT,\n    payload\n})\n\n// Admin Access\nexport const addMedicine = (payload) => ({\n    type: ADD_MEDICINE,\n    payload\n})\n\nexport const addSalesExecutive = (payload) => ({\n    type: ADD_SALES_EXECUTIVE,\n    payload\n})\n\n\nexport const updateInventoryList = (payload) => ({\n    type: UPDATE_INVENTORY_LIST,\n    payload\n})\n\nexport const updateTeamList = (payload) => ({\n    type: UPDATE_TEAM_LIST,\n    payload\n})\n\n\nexport const updateAllOrders = (payload) => ({\n    type: UPDATE_ALL_ORDERS,\n    payload\n})\n\n\nexport const updateExecutiveDetails = (payload) => ({\n    type: UPDATE_EXECUTIVE_DETAILS,\n    payload\n})\n\nexport const updateInventoryDetails = (payload) => ({\n    type: UPDATE_INVENTORY_DETAILS,\n    payload\n})\n\n\nexport const userIdForUpdate = (payload) => ({\n    type: USER_ID_FOR_UPDATE,\n    payload\n})\n\nexport const medicineIdForUpdate = (payload) => ({\n    type: MEDICINE_ID_FOR_UPDATE,\n    payload\n})\n\n\n\n// ORDERS BY EXECUTIVE\n\nexport const createOrder = (payload) => ({\n    type: CREATE_ORDER,\n    payload\n})\n\nexport const addToCart = (payload) => ({\n    type: ADD_TO_CART,\n    payload\n})\n\n\nexport const emptyCart = (payload) => ({\n    type: EMPTY_CART,\n    payload\n})\n","import React from 'react';\nimport \"./topbar.css\";\nimport { connect } from 'react-redux';\nimport { adminLogout } from '../../actions';\nimport { useHistory } from \"react-router-dom\";\n\n\n\nconst Topbar = ({ loginStatus, logOutAdmin }) => {\n    const history = useHistory()\n\n    return (<div className=\"topbar\">\n        <div><img src=\"https://i.pinimg.com/originals/46/9c/dc/469cdc719b0b7d42a1e93758faf7878c.png\" alt=\"pharmacy-management-software\" /></div>\n        <div className=\"topbar-menu\">\n            {loginStatus && <p onClick={() => {\n                localStorage.setItem('loginStatus', false)\n                localStorage.setItem('adminLogin', false)\n                localStorage.setItem('salesLogin', false)\n                history.push(\"/\");\n                logOutAdmin()\n            }} style={{ cursor: 'pointer' }}>Logout <i class=\"fas fa-sign-out-alt\"></i></p>}\n        </div>\n    </div>);\n}\n\n\n\nconst mapStateToProps = (state) => ({\n    loginStatus: state.loginStatus\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    logOutAdmin: () => dispatch(adminLogout(''))\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Topbar)\n","import React from 'react';\nimport \"./admin.css\";\nimport { Link } from \"react-router-dom\";\n\n\nconst Admin = () => {\n\n    return (<div className=\"admin_body\">\n        <div className=\"admin_header\">\n            <h2 className=\"inventory_menu\"><i class=\"fas fa-shopping-bag\"></i> INVENTORY</h2>\n            <Link to=\"/admin/add_medicine\" className=\"admin_button\">Add Medicine</Link>\n            <Link to=\"/admin/view_inventory\" className=\"admin_button\">View Inventory</Link>\n            <h2 className=\"team_menu\"><i class=\"fas fa-user-friends\"></i> TEAM</h2>\n            <Link to=\"/admin/add_sales_executive\" className=\"admin_button\">Add Sales Executive</Link>\n            <Link to=\"/admin/view_team\" className=\"admin_button\" >View Team</Link>\n            <h2 className=\"order_menu\"><i class=\"fas fa-shopping-cart\"></i> ORDERS</h2>\n            <Link to=\"/admin/show_all_orders\" className=\"admin_button\" >Show All Orders</Link>\n            <Link to=\"/admin/create_orders\" className=\"admin_button\" >Create Order</Link>\n        </div>\n    </div >);\n}\n\nexport default Admin;\n","import React, { useState } from 'react';\nimport \"./login.css\";\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { adminLogin, salesLogin } from \"../../actions\"\n\n\n\nconst Login = ({ adminSignedIn, salesSignedIn }) => {\n    const [loginEmail, setLoginEmail] = useState('');\n    const [loginPassword, setLoginPassword] = useState('')\n    const [isAdmin, setIsAdmin] = useState(true);\n    const [loginStatus, setLoginStatus] = useState(localStorage.getItem('loginStatus') || false);\n    const history = useHistory()\n\n\n\n    if (loginStatus !== 'false') {\n        localStorage.setItem('loginStatus', loginStatus)\n    }\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n        console.log(loginEmail, loginPassword)\n        if (isAdmin) {\n            if (loginEmail === \"test-admin\" && loginPassword === \"test-admin\") {\n                setLoginStatus(true)\n                localStorage.setItem('loginStatus', true)\n                localStorage.setItem('adminLogin', true)\n                history.push('/admin/add_medicine')\n                adminSignedIn()\n            } else {\n                alert(\"Invalid credentials!\")\n            }\n        } else {\n            if (loginEmail === \"test-sales\" && loginPassword === \"test-sales\") {\n                setLoginStatus(true)\n                localStorage.setItem('loginStatus', true)\n                localStorage.setItem('salesLogin', true)\n                history.push('/sales_executive/create_order')\n                salesSignedIn()\n            } else {\n                alert(\"Invalid credentials!\")\n            }\n        }\n    }\n\n    return (<div className=\"login-body\">\n        <form className=\"login-form\" onSubmit={handleLogin\n        }>\n            <h1>Login</h1>\n            <div className=\"btn-group\">\n                <p className={isAdmin ? \"button active_button\" : \"button\"} onClick={() => setIsAdmin(true)}>Admin</p>\n                <p className={!isAdmin ? \"button active_button\" : \"button\"} onClick={() => setIsAdmin(false)}>Sales Executive</p>\n            </div>\n            <div className=\" form_group\">\n                {/* <label>Username </label> */}\n                <i class=\"fa fa-user\"></i>\n                <input type=\"text\" className=\"form_control\" placeholder=\"Enter username\" required\n                    onChange={(eVal) => setLoginEmail(eVal.target.value)} />\n            </div>\n\n            <div className=\" form_group\">\n                {/* <label>Password</label> */}\n                <i class=\"fa fa-envelope\"></i>\n                <input type=\"password\" className=\"form_control\" placeholder=\"Enter password\" required onChange={(pVal) => {\n                    setLoginPassword(pVal.target.value)\n                }} />\n            </div>\n            <button type=\"submit\" className=\"btn  \">Submit</button>\n        </form>\n\n    </div>);\n}\n\n\n\nconst mapDispatchToProps = (dispatch) => ({\n\n    adminSignedIn: () => dispatch(adminLogin('')),\n    salesSignedIn: () => dispatch(salesLogin(''))\n\n})\n\nexport default connect(null, mapDispatchToProps)(Login)\n","import React from 'react';\nimport \"./salesExecutive.css\";\nimport { Link } from \"react-router-dom\";\n\n\nconst SalesExecutive = () => {\n\n    return (<div className=\"sales_executive_body\">\n        <div className=\"sales_executive_header\">\n            <Link to=\"/sales_executive/create_order\" className=\"sales_executive_button\" style={{ marginTop: \"40px\" }}>Create Order</Link>\n            <Link to=\"/sales_executive/view_orders\" className=\"sales_executive_button\">View Orders</Link>\n        </div>\n    </div>);\n}\n\nexport default SalesExecutive;\n\n\n\n\n\n\n","import React from 'react';\nimport Admin from '../Admin';\nimport Login from '../Login';\nimport SalesExecutive from '../SalesExecutive';\nimport { connect } from 'react-redux'\n\n\n\nconst Home = ({ loginStatus, adminLogin, salesLogin }) => {\n    console.log(loginStatus);\n    console.log(loginStatus === false);\n    return (<div>\n        {adminLogin === true && loginStatus === true && <Admin />}\n        {salesLogin === true && loginStatus === true && <SalesExecutive />}\n        {loginStatus === false && < Login />}\n    </div>);\n}\n\n\nconst mapStateToProps = (state) => ({\n    loginStatus: state.loginStatus,\n    adminLogin: state.adminLogin,\n    salesLogin: state.salesLogin\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n","import React, { useState } from 'react';\nimport Admin from '.';\nimport \"./addMedicine.css\";\nimport { connect } from 'react-redux'\nimport { addMedicine } from '../../actions/index'\n\n\n\nconst AddMedicine = ({ add_medicine_to_inventory }) => {\n    const [medicineName, setMedicineName] = useState('')\n    const [manufacturerName, setManufacturerName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [stock, setStock] = useState(0)\n    const [discount, setDiscount] = useState(0)\n\n\n    const handleFormSubmit = (e) => {\n        const medicineDetails = { medicineName: medicineName, manufacturerName: manufacturerName, price: price, stock: stock, discount: discount, medicineId: Math.floor((Math.random() * 100000000) + 1) }\n\n        e.preventDefault();\n        e.target[0].value = ''\n        e.target[1].value = ''\n        e.target[2].value = ''\n        e.target[3].value = ''\n        e.target[4].value = ''\n\n        add_medicine_to_inventory(medicineDetails)\n        var inventoryList = JSON.parse(localStorage.getItem('inventoryList')) || [];\n        inventoryList.push(medicineDetails);\n        localStorage.setItem('inventoryList', JSON.stringify(inventoryList));\n    }\n\n\n\n    return (<div className=\"add-medicine\">\n        <Admin />\n        <h1 style={{ margin: \"20px\", textAlign: \"center\", marginLeft: \"14%\" }}>Medicine Details</h1>\n        <form className=\"add_medicine_form\" onSubmit={handleFormSubmit}>\n            <div className=\"form_groups\">\n                <label htmlFor=\"medicineName\">Medicine Name</label>\n                <input type=\"text\" className=\"form_controls\" id=\"medicineName\" placeholder=\"Medicine name\" onChange={(e) => { setMedicineName(e.target.value) }} />\n            </div>\n            <div className=\"form_groups\">\n                <label htmlFor=\"manufacturerName\">Manufacturer Name</label>\n                <input type=\"text\" className=\"form_controls\" id=\"manufacturerName\" placeholder=\"Manufacturer Name\" onChange={(e) => { setManufacturerName(e.target.value) }} />\n            </div>\n            <div className=\"form_groups\">\n                <label htmlFor=\"medicinePrice\">Price(INR)</label>\n                <input type=\"Number\" className=\"form_controls\" id=\"medicinePrice\" placeholder=\"price\" onChange={(e) => { setPrice(e.target.value) }} />\n            </div>\n            <div className=\"form_groups\">\n                <label htmlFor=\"medicineInStock\">Stock</label>\n                <input type=\"Number\" className=\"form_controls\" id=\"medicineInStock\" placeholder=\"Available quantity\" onChange={(e) => { setStock(e.target.value) }} />\n            </div>\n            <div className=\"form_groups\">\n                <label htmlFor=\"discountPercent\">Discount</label>\n                <input type=\"text\" className=\"form_controls\" id=\"discountPercent\" placeholder=\"Discount in percent\" onChange={(e) => { setDiscount(e.target.value) }} />\n            </div>\n            <button type=\"submit\" className=\"btn\">Add to the Inventory</button>\n        </form>\n    </div>);\n}\n\n\nconst mapDispatchToProps = (dispatch) => ({\n    add_medicine_to_inventory: (payload) => dispatch(addMedicine(payload))\n})\n\nexport default connect(null, mapDispatchToProps)(AddMedicine)\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux'\nimport { updateInventoryDetails } from '../../actions';\nimport \"./updateExecutiveDetails.css\"\n\n\n\nconst UpdateInventoryDetails = ({ medicineIdForUpdate, inventoryList, update_inventory_details, crossClick }) => {\n    medicineIdForUpdate = medicineIdForUpdate || localStorage.getItem('medicineIdForUpdate')\n    const medicineDetailsForUpdate = inventoryList.filter(user => user.medicineId == medicineIdForUpdate);\n    const { medicineName, manufacturerName, price, stock, discount } = medicineDetailsForUpdate[0];\n    const [updatedManufacturerName, setUpdatedManufacturerName] = useState(manufacturerName)\n    const [updatedPrice, setUpdatedPrice] = useState(price)\n    const [updatedStock, setUpdatedStock] = useState(stock)\n    const [updatedDiscount, setUpdatedDiscount] = useState(discount)\n\n    console.log(medicineIdForUpdate)\n    console.log(medicineDetailsForUpdate)\n\n    console.log(discount)\n    // Handle Update Details\n    const handleMedicineUpdateDetails = (e) => {\n        e.preventDefault();\n        var inventoryListAfterUpdate = JSON.parse(localStorage.getItem('inventoryList')) || [];\n        const indexForUpdate = inventoryListAfterUpdate.findIndex(item => item.medicineId === medicineIdForUpdate\n        )\n        console.log(inventoryListAfterUpdate)\n        inventoryListAfterUpdate[indexForUpdate].discount = updatedDiscount;\n        inventoryListAfterUpdate[indexForUpdate].manufacturerName = updatedManufacturerName;\n        inventoryListAfterUpdate[indexForUpdate].price = updatedPrice;\n        inventoryListAfterUpdate[indexForUpdate].stock = updatedStock;\n        localStorage.setItem('inventoryList', JSON.stringify(inventoryListAfterUpdate));\n\n        localStorage.setItem('isUpdateMedicineForm', false)\n        update_inventory_details(inventoryListAfterUpdate)\n\n    }\n\n\n\n\n    return (<div style={{ textAlign: 'center' }} className=\"add_executive_details_container\">\n        <form className=\"add_executive_form\" onSubmit={handleMedicineUpdateDetails} >\n            <p onClick={crossClick} className=\"remove_update_form_icon\"><i className=\"fas fa-times\"></i></p>\n            <div className=\"form_groups\">\n                <label htmlFor=\"Medicine Name\">Medicine Name</label>\n                <input type=\"text\" className=\"form_controls\" id=\"Medicine Name\" placeholder=\"Medicine Name\" disabled value={medicineName} />\n            </div>\n\n            <div className=\"form_groups\">\n                <label htmlFor=\"ManufacturerName\">Manufacturer Name</label>\n                <input type=\"text\" className=\"form_controls\" id=\"ManufacturerName\" placeholder=\"Manufacturer Name\" onChange={(e) => { setUpdatedManufacturerName(e.target.value) }} value={updatedManufacturerName} />\n            </div>\n\n            <div className=\"form_groups\">\n                <label htmlFor=\"Price\">Price(INR)</label>\n                <input type=\"text\" className=\"form_controls\" id=\"Price\" placeholder=\"Price\" onChange={(e) => { setUpdatedPrice(e.target.value) }} value={updatedPrice} />\n            </div>\n            <div className=\"form_groups\">\n                <label htmlFor=\"Stock\">Stock</label>\n                <input type=\"Number\" className=\"form_controls\" id=\"Stock\" placeholder=\"Stock in years\" onChange={(e) => {\n                    setUpdatedStock(e.target.value)\n                }} value={updatedStock} />\n            </div>\n            <div className=\"form_groups\">\n                <label htmlFor=\"Discount\">Discount</label>\n                <input type=\"text\" className=\"form_controls\" id=\"Discount\" placeholder=\"Discount\" onChange={(e) => { setUpdatedDiscount(e.target.value) }} value={updatedDiscount} />\n            </div>\n            <button type=\"submit\" className=\"btn \">Update Details</button>\n        </form>\n    </div>);\n}\n\nconst mapStateToProps = (state) => ({\n    inventoryList: state.inventoryList,\n    medicineIdForUpdate: state.medicineIdForUpdate\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    update_inventory_details: (payload) => dispatch(updateInventoryDetails(payload)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateInventoryDetails)\n","import React, { useState } from 'react';\nimport Admin from '.';\nimport { connect } from 'react-redux';\nimport \"./viewInventory.css\"\nimport { updateInventoryList } from '../../actions';\nimport UpdateInventoryDetails from './updateInventoryDetails';\nimport { medicineIdForUpdate } from '../../actions';\n\n\nconst ViewInventory = ({ inventoryList, inventory_list_after_delete_ById, medicine_id_for_update }) => {\n    const [isUpdateMedicineForm, setIsUpdateMedicineForm] = useState(false);\n\n\n    const delete_medicine_by_id = (medicineName) => {\n        var inventoryListAfterDelete = JSON.parse(localStorage.getItem('inventoryList')) || [];\n        inventoryListAfterDelete = inventoryListAfterDelete.filter(item => item.medicineName !== medicineName)\n        localStorage.setItem('inventoryList', JSON.stringify(inventoryListAfterDelete));\n        inventory_list_after_delete_ById(medicineName)\n    }\n\n\n    //   // Update Medicine details By ID\n    const update_medicine_by_id = (id) => {\n        setIsUpdateMedicineForm(true)\n        console.log(id)\n        localStorage.setItem('medicineIdForUpdate', id)\n        medicine_id_for_update(id)\n    }\n\n    const crossClick = () => {\n        console.log(\"Clicked\")\n        setIsUpdateMedicineForm(false)\n    }\n\n    return (<div className=\"view_inventory\">\n        <Admin />\n        {isUpdateMedicineForm && <UpdateInventoryDetails medicineIdForUpdate={medicineIdForUpdate} crossClick={crossClick} />}\n\n        <div className=\"inventory_container\">\n            <div className=\"inventory_container_header\">\n                <p>Medicine</p>\n                <p>Manufacturer</p>\n                <p>Price</p>\n                <p>Quantity</p>\n                <p>Discount</p>\n            </div>\n            {inventoryList.map(item => <InventoryMedicineCard medicineDetails={item} delete_medicine_by_id={delete_medicine_by_id} key={Math.random()} update_medicine_by_id={update_medicine_by_id} />)}\n        </div>\n    </div >);\n}\n\n\nconst mapStateToProps = (state) => ({\n    inventoryList: state.inventoryList,\n    medicineIdForUpdate: state.medicineIdForUpdate\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    inventory_list_after_delete_ById: (payload) => dispatch(updateInventoryList(payload)),\n    medicine_id_for_update: (payload) => dispatch(medicineIdForUpdate(payload))\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewInventory)\n\n\n\n\n// Inventory Medicne card\nconst InventoryMedicineCard = (props) => {\n    const { medicineName, manufacturerName, price, stock, discount, medicineId } = props.medicineDetails;\n\n\n    return (\n        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n            <div className=\"medicine-card\" key={Math.random()} >\n                <span className=\"medicine-name\">{medicineName}</span>\n                <span className=\"manufacturer-name\">{manufacturerName}</span>\n                <span className=\"medicine-price\">{price}</span>\n                <span className=\"medicine-quantity\">{stock}</span>\n                <span className=\"medicine-discount\">{discount}</span>\n            </div>\n            <div style={{ marginLeft: \"10px\", cursor: \"pointer\" }} onClick={() => props.delete_medicine_by_id(medicineName)} > <i className=\"fas fa-trash\"></i></div>\n            <div style={{ cursor: \"pointer\", marginLeft: \"10px\" }} onClick={() => props.update_medicine_by_id(medicineId)} > <i className=\"fas fa-edit\"></i></div>\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux'\nimport { updateExecutiveDetails } from '../../actions';\nimport \"./updateExecutiveDetails.css\"\n\n\n\nconst UpdateExecutiveDetails = ({ userIdForUpdate, teamList, update_executive_details, crossClick }) => {\n    userIdForUpdate = userIdForUpdate || localStorage.getItem('userIdForUpdate')\n    const userDetailsForUpdate = teamList.filter(user => user.salesExecutiveId == userIdForUpdate);\n    console.log(userDetailsForUpdate[0]);\n    const { firstName, lastName, dob, gender, experience } = userDetailsForUpdate[0];\n    const [updatedFirstName, setUpdatedFirstName] = useState(firstName)\n    const [updatedLastName, setUpdatedLastName] = useState(lastName)\n    const [updatedDob, setUpdatedDob] = useState(dob)\n    const [updatedGender, setUpdatedGender] = useState(gender)\n    const [updatedExperience, setUpdatedExperience] = useState(experience)\n\n    // Handle Update Details\n    const handleExecutiveUpdateDetails = (e) => {\n        e.preventDefault();\n        var teamListAfterUpdate = JSON.parse(localStorage.getItem('teamList')) || [];\n        const indexForUpdate = teamListAfterUpdate.findIndex(item => item.salesExecutiveId === userIdForUpdate\n        )\n        console.log(teamListAfterUpdate)\n        teamListAfterUpdate[indexForUpdate].firstName = updatedFirstName;\n        teamListAfterUpdate[indexForUpdate].lastName = updatedLastName;\n        teamListAfterUpdate[indexForUpdate].dob = updatedDob;\n        teamListAfterUpdate[indexForUpdate].gender = updatedGender;\n        teamListAfterUpdate[indexForUpdate].experience = updatedExperience;\n        localStorage.setItem('teamList', JSON.stringify(teamListAfterUpdate));\n\n        localStorage.setItem('isUpdateForm', false)\n        update_executive_details(teamListAfterUpdate)\n\n    }\n\n\n\n\n    return (<div style={{ textAlign: 'center' }} className=\"add_executive_details_container\">\n        <form className=\"add_executive_form\" onSubmit={handleExecutiveUpdateDetails} >\n            <p onClick={crossClick} className=\"remove_update_form_icon\"><i className=\"fas fa-times\"></i></p>\n            <div className=\"form_groups\">\n                <label htmlFor=\"firstName\">First Name</label>\n                <input type=\"text\" className=\"form_controls\" id=\"firstName\" placeholder=\"First name\" onChange={(e) => { setUpdatedFirstName(e.target.value) }} value={updatedFirstName} />\n            </div>\n            <div className=\"form_groups\">\n                <label htmlFor=\"lastName\">Last Name</label>\n                <input type=\"text\" className=\"form_controls\" id=\"lastName\" placeholder=\"Last Name\" onChange={(e) => { setUpdatedLastName(e.target.value) }} value={updatedLastName} />\n            </div>\n            <div className=\"form_groups\">\n                <label htmlFor=\"Dob\">DOB</label>\n                <input type=\"Date\" className=\"form_controls\" id=\"Dob\" placeholder=\"dob\" onChange={(e) => { setUpdatedDob(e.target.value) }} value={updatedDob} />\n            </div>\n            <div className=\"form_groups\">\n                <label htmlFor=\"Gender\">Gender(M/F)</label>\n                <input type=\"text\" className=\"form_controls\" id=\"Gender\" placeholder=\"Gender\" onChange={(e) => { setUpdatedGender(e.target.value) }} value={updatedGender} />\n            </div>\n            <div className=\"form_groups\">\n                <label htmlFor=\"experience\">Experience</label>\n                <input type=\"number\" className=\"form_controls\" id=\"experience\" placeholder=\"Experience in years\" onChange={(e) => {\n\n                    setUpdatedExperience(e.target.value)\n                }} value={updatedExperience} />\n            </div>\n            <button type=\"submit\" className=\"btn \">Update Details</button>\n        </form>\n    </div>);\n}\n\nconst mapStateToProps = (state) => ({\n    teamList: state.teamList,\n    userIdForUpdate: state.userIdForUpdate\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    update_executive_details: (payload) => dispatch(updateExecutiveDetails(payload)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateExecutiveDetails)\n","import React, { useState } from 'react';\nimport Admin from '.';\nimport { connect } from 'react-redux';\nimport \"./viewTeam.css\";\nimport { updateTeamList } from \"../../actions/index\";\nimport UpdateExecutiveDetails from './updateExecutiveDetails';\nimport { userIdForUpdate } from \"../../actions/index\"\n\n\nconst ViewTeam = ({ teamList, team_list_after_delete, user_id_for_update }) => {\n    const [isUpdateForm, setIsUpdateForm] = useState(false);\n\n    const delete_sales_executive_by_id = (executiveId) => {\n        console.log(executiveId)\n        var teamListAfterDelete = JSON.parse(localStorage.getItem('teamList')) || [];\n        teamListAfterDelete = teamListAfterDelete.filter(item => item.salesExecutiveId !== executiveId)\n        localStorage.setItem('teamList', JSON.stringify(teamListAfterDelete));\n        team_list_after_delete(executiveId)\n    }\n\n    // Update Sales Executive Details By ID\n    const update_sales_executive_by_id = (id) => {\n        setIsUpdateForm(true)\n        localStorage.setItem('userIdForUpdate', id)\n        user_id_for_update(id)\n    }\n\n\n    const crossClick = () => {\n        console.log(\"Clicked\")\n        setIsUpdateForm(false)\n    }\n\n    return (<div className=\"view_team\">\n        <Admin />\n        {isUpdateForm && <UpdateExecutiveDetails userIdForUpdate={userIdForUpdate} crossClick={crossClick} />}\n        <div className=\"team_container\">\n            <div className=\"team_container_header\">\n                <p className=\"sales_executive_id\">UserId</p>\n                <p className=\"sales_executive_fname\">First Name</p>\n                <p className=\"sales_executive_lname\">Last Name</p>\n                <p className=\"sales_executive_dob\">DOB</p>\n                <p className=\"sales_executive_gender\">Gender</p>\n                <p className=\"sales_executive_experience\">Experience</p>\n            </div>\n            {teamList.map(item => <SalesExecutiveCard executiveDetails={item} delete_sales_executive_by_id={delete_sales_executive_by_id} key={Math.random()} update_sales_executive_by_id={update_sales_executive_by_id} />)}\n        </div>\n\n    </div >);\n}\n\n\nconst mapStateToProps = (state) => ({\n    teamList: state.teamList,\n    userIdForUpdate: state.userIdForUpdate\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    team_list_after_delete: (payload) => dispatch(updateTeamList(payload)),\n    user_id_for_update: (payload) => dispatch(userIdForUpdate(payload))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewTeam)\n\n\n\n\n// Sales Executive card\nconst SalesExecutiveCard = (props) => {\n    const { firstName, lastName, dob, gender, experience, salesExecutiveId } = props.executiveDetails\n    return (\n        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n            <div className=\"sales-executive-card\" key={Math.random()} >\n                <span className=\"sales_executive_id\">{salesExecutiveId}</span>\n                <span className=\"sales_executive_fname\">{firstName}</span>\n                <span className=\"sales_executive_fname\">{lastName}</span>\n                <span className=\"sales_executive_dob\">{dob}</span>\n                <span className=\"sales_executive_gender\">{gender}</span>\n                <span className=\"sales_executive_experience\">{experience}</span>\n            </div>\n            <div style={{ marginLeft: \"10px\", cursor: \"pointer\", marginRight: \"10px\" }} onClick={() => props.delete_sales_executive_by_id(salesExecutiveId)} > <i className=\"fas fa-trash\"></i></div>\n            <div style={{ cursor: \"pointer\" }} onClick={() => props.update_sales_executive_by_id(salesExecutiveId)} > <i className=\"fas fa-edit\"></i></div>\n        </div>\n    );\n}\n\n\n","import React, { useState } from 'react';\nimport Admin from '.';\nimport \"./addSalesExecutive.css\";\nimport \"./addMedicine.css\"\nimport { connect } from 'react-redux'\nimport { addSalesExecutive } from '../../actions/index'\n\n\n\nconst AddMedicine = ({ add_executive_to_team }) => {\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [dob, setDob] = useState('')\n    const [gender, setGender] = useState('')\n    const [experience, setExperience] = useState(0)\n\n    const handleFormSubmit = (e) => {\n        const executiveDetails = { firstName: firstName, lastName: lastName, dob: dob, gender: gender, experience: experience, salesExecutiveId: Math.floor((Math.random() * 100000000) + 1) }\n\n        e.preventDefault();\n        e.target[0].value = ''\n        e.target[1].value = ''\n        e.target[2].value = ''\n        e.target[3].value = ''\n        e.target[4].value = ''\n\n        add_executive_to_team(executiveDetails)\n        var teamList = JSON.parse(localStorage.getItem('teamList')) || [];\n        teamList.push(executiveDetails);\n        localStorage.setItem('teamList', JSON.stringify(teamList));\n    }\n\n\n\n    return (<div className=\"add-medicine\">\n        <Admin />\n        <h1 style={{ margin: \"20px\", textAlign: \"center\", marginLeft: \"14%\" }}>Executive Details</h1>\n        <form className=\"add_executive_form_details\" onSubmit={handleFormSubmit}>\n            <div className=\"form_groups\">\n                <label htmlFor=\"firstName\">First Name</label>\n                <input type=\"text\" className=\"form_controls\" id=\"firstName\" placeholder=\"First name\" onChange={(e) => { setFirstName(e.target.value) }} />\n            </div>\n            <div className=\"form_groups\">\n                <label htmlFor=\"lastName\">Last Name</label>\n                <input type=\"text\" className=\"form_controls\" id=\"lastName\" placeholder=\"Last Name\" onChange={(e) => { setLastName(e.target.value) }} />\n            </div>\n            <div className=\"form_groups\">\n                <label htmlFor=\"Dob\">DOB</label>\n                <input type=\"Date\" className=\"form_controls\" id=\"Dob\" placeholder=\"dob\" onChange={(e) => { setDob(e.target.value) }} />\n            </div>\n            <div className=\"form_groups\">\n                <label htmlFor=\"Gender\">Gender(M/F)</label>\n                <input type=\"text\" className=\"form_controls\" id=\"Gender\" placeholder=\"Gender\" onChange={(e) => { setGender(e.target.value) }} />\n            </div>\n            <div className=\"form_groups\">\n                <label htmlFor=\"experience\">Experience</label>\n                <input type=\"number\" className=\"form_controls\" id=\"experience\" placeholder=\"Experience in years\" onChange={(e) => { setExperience(e.target.value) }} />\n            </div>\n            <button type=\"submit\" className=\"btn \">Add to the team</button>\n        </form>\n    </div>);\n}\n\n\nconst mapDispatchToProps = (dispatch) => ({\n    add_executive_to_team: (payload) => dispatch(addSalesExecutive(payload))\n})\n\nexport default connect(null, mapDispatchToProps)(AddMedicine)\n","import React from 'react';\nimport SalesExecutive from '../SalesExecutive';\nimport { connect } from 'react-redux';\nimport \"./viewOrder.css\"\nimport { updateAllOrders } from '../../actions';\n\n\nconst ViewOrders = ({ allOrders, my_orders_list_after_delete }) => {\n    console.log(allOrders)\n    const showCartItem = allOrders.filter(item => item.userId === 10001)\n    const delete_my_order_by_id = (orderId) => {\n        console.log(orderId)\n        var myOrdersListAfterDelete = JSON.parse(localStorage.getItem('allOrders')) || [];\n        myOrdersListAfterDelete = myOrdersListAfterDelete.filter(item => item.orderId !== orderId)\n        localStorage.setItem('allOrders', JSON.stringify(myOrdersListAfterDelete));\n        my_orders_list_after_delete(orderId)\n    }\n\n    return (<div className=\"add-medicine\">\n        <SalesExecutive />\n        <h1 style={{ textAlign: \"center\", marginTop: \"20px\" }}>MY ORDERS</h1>\n\n        {showCartItem.map(order => <OrderById key={Math.random()} myOrderDetails={order}\n            delete_my_order_by_id={delete_my_order_by_id} />)}\n    </div>);\n}\n\n\n\nconst mapStateToProps = (state) => ({\n    allOrders: state.allOrders\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    my_orders_list_after_delete: (payload) => { dispatch(updateAllOrders(payload)) }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewOrders)\n\n\nconst OrderById = (props) => {\n    const { customerName, contactNumber, orderId, cartItem } = props.myOrderDetails;\n    const totalAmount = cartItem.reduce(function (sum, current) {\n        return sum + (current.itemQty) * 10;\n    }, 0);\n    return (\n        <div className=\"my-order-list\" key={orderId}>\n            <div className=\"my-order-user-details\">\n                <p>CUSTOMER NAME: <span>{customerName}</span></p>\n                <p>CONTACT NUMBER: <span>{contactNumber}</span></p>\n                <p>ORDER ID : <span>{orderId}</span></p>\n            </div>\n            <div className=\"cart-item-header \">\n                <h4 className=\"cart-item-name\">Name</h4>\n                <h4>Quantity</h4>\n                <h4>Amount</h4>\n            </div>\n            {cartItem.map(item =>\n                <div className=\"cart-item-details\" key={Math.random()}>\n                    <p className=\"cart-item-name\">{item.itemName}</p>\n                    <p>{item.itemQty}</p>\n                    <p>{item.itemQty * 10}</p>\n                </div>\n            )}\n            {<p style={{ borderTop: \"1px solid gray\", width: \"100%\", marginTop: \"10px\", marginBottom: 0 }}></p>}\n            {<div style={{ marginTop: \"0px\" }}>\n                <h3 style={{ margin: 0, marginLeft: \"58%\", marginTop: \"10px\" }}>Total Amount = <span style={{ fontWeight: 300 }}>{totalAmount}</span></h3>\n            </div>}\n            <div className=\"delete_order_icon\" onClick={() => props.delete_my_order_by_id(orderId)} > <i className=\"fas fa-trash\"></i></div>\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux'\nimport SalesExecutive from '.';\nimport { createOrder, emptyCart } from \"../../actions/index\";\nimport { addToCart } from \"../../actions/index\"\nimport \"./createOrder.css\"\n\n\n\nconst CreateExecutiveOrder = ({ create_order, add_to_cart, cartItem, empty_cart }) => {\n    const [customerName, setCustomerName] = useState('')\n    const [contactNumber, setContactNumber] = useState('')\n    const [addToCartName, setAddToCartName] = useState('');\n    const [addToCartQty, setAddToCartQty] = useState('');\n\n\n    const handleFormSubmit = (e) => {\n        const orderDetails = { customerName: customerName, contactNumber: contactNumber, cartItem: cartItem, orderId: Math.floor((Math.random() * 100000000) + 1), userId: 10001 }\n\n        e.preventDefault();\n        e.target[0].value = ''\n        e.target[1].value = ''\n\n        create_order(orderDetails)\n        var allOrders = JSON.parse(localStorage.getItem('allOrders')) || [];\n        allOrders.push(orderDetails);\n        localStorage.setItem('allOrders', JSON.stringify(allOrders));\n\n        // Set Cart To Empty\n\n        localStorage.setItem('cartItem', JSON.stringify([]));\n        empty_cart()\n    }\n\n\n    const handleAddToCart = (e) => {\n\n        const cartItemDetails = { itemName: addToCartName, itemQty: addToCartQty }\n\n        cartItem = JSON.parse(localStorage.getItem('cartItem')) || [];\n        cartItem.push(cartItemDetails);\n        localStorage.setItem('cartItem', JSON.stringify(cartItem));\n        add_to_cart(cartItemDetails);\n    }\n\n    // Total amount\n    const totalAmount = cartItem.reduce(function (sum, current) {\n        return sum + (current.itemQty) * 10;\n    }, 0);\n\n    return (<div className=\"add-medicine\">\n        <SalesExecutive />\n        <h1 style={{ margin: \"20px\", textAlign: \"center\", marginLeft: \"14%\" }}>Make an Order</h1>\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <div className=\"add_to_cart\">\n                <label type=\"text\" onChange={(e) => setAddToCartName(e.target.value)}>Medicine <input className=\"form_controls \" /></label>\n                <label onChange={(e) => setAddToCartQty(e.target.value)}>Quantity <input type=\"Number\" className=\"form_controls \" /></label>\n                <p>Price per unit {20}</p>\n                <button className=\"btn \" onClick={handleAddToCart}>Add to Cart</button>\n            </div>\n            <form className=\"create_order_form\" onSubmit={handleFormSubmit}>\n                <div className=\"executive_details\">\n                    <div className=\"form_groups\">\n                        <label htmlFor=\"customerName\">Customer Name</label>\n                        <input type=\"text\" className=\"form_controls\" id=\"customerName\" placeholder=\"Cutsomer name\" onChange={(e) => { setCustomerName(e.target.value) }} required />\n                    </div>\n                    <div className=\"form_groups\">\n                        <label htmlFor=\"contactNumber\">Contact Number</label>\n                        <input type=\"text\" className=\"form_controls\" id=\"contactNumber\" placeholder=\"Contact Number\" onChange={(e) => { setContactNumber(e.target.value) }} required />\n                    </div>\n                </div>\n\n                {cartItem.length > 0 && <div className=\"cart-item-header\">\n                    <p className=\"cart-item-name\">Name</p>\n                    <p>Quantity</p>\n                    <p>Amount</p>\n                </div>}\n                {cartItem.map(item =>\n                    <div className=\"cart-item-details\" key={Math.random()}>\n                        <p className=\"cart-item-name\">{item.itemName}</p>\n                        <p>{item.itemQty}</p>\n                        <p>{item.itemQty * 10}</p>\n                    </div>\n                )}\n                {cartItem.length > 0 && <p style={{ borderTop: \"1px solid gray\", width: \"500px\", marginTop: \"10px\", marginBottom: 0 }}></p>}\n                {cartItem.length > 0 && <div style={{ marginTop: \"0px\" }}>\n                    <h3 style={{ margin: 0, marginLeft: \"160px\" }}>Total Amount = <span style={{ fontWeight: 300 }}>{totalAmount}</span></h3>\n                </div>}\n\n                <button type=\"submit\" className=\"btn \">Create Order</button>\n                <p className=\"clear-cart-button\" onClick={() => {\n                    empty_cart()\n                }}>Clear Cart</p>\n\n            </form>\n        </div>\n    </div >);\n}\n\n\nconst mapStateToProps = (state) => ({\n    cartItem: state.cartItem\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    create_order: (payload) => dispatch(createOrder(payload)),\n    add_to_cart: (payload) => dispatch(addToCart(payload)),\n    empty_cart: () => dispatch(emptyCart())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateExecutiveOrder)\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport \"../SalesExecutive/viewOrders\"\nimport Admin from '.';\nimport \"./showAllOrders.css\";\nimport { updateAllOrders } from \"../../actions/index\"\n\n\nconst ViewOrders = ({ allOrders, orders_list_after_delete }) => {\n\n    const delete_order_by_id = (orderId) => {\n        console.log(orderId)\n        var ordersListAfterDelete = JSON.parse(localStorage.getItem('allOrders')) || [];\n        ordersListAfterDelete = ordersListAfterDelete.filter(item => item.orderId !== orderId)\n        localStorage.setItem('allOrders', JSON.stringify(ordersListAfterDelete));\n        orders_list_after_delete(orderId)\n    }\n    return (<div className=\"add-medicine\">\n        <Admin />\n        <h1 style={{ textAlign: \"center\", marginTop: \"20px\", marginLeft: '150px' }}>ALL ORDERS</h1>\n        {allOrders.map(order => <OrderById key={Math.random()} myOrderDetails={order} delete_order_by_id={delete_order_by_id} />)}\n    </div>);\n}\n\n\n\nconst mapStateToProps = (state) => ({\n    allOrders: state.allOrders\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    orders_list_after_delete: (payload) => dispatch(updateAllOrders(payload))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewOrders)\n\n\nconst OrderById = (props) => {\n    const { customerName, contactNumber, orderId, cartItem } = props.myOrderDetails;\n    const totalAmount = cartItem.reduce(function (sum, current) {\n        return sum + (current.itemQty) * 10;\n    }, 0);\n    return (\n        <div className=\"my-order-list\" style={{ width: \"75%\" }}>\n            <div className=\"my-order-user-details\">\n                <p>CUSTOMER NAME: <span>{customerName}</span></p>\n                <p>CONTACT NUMBER: <span>{contactNumber}</span></p>\n                <p>ORDER ID : <span>{orderId}</span></p>\n            </div>\n            <div className=\"cart-item-header \">\n                <h4 className=\"cart-item-name\">Name</h4>\n                <h4>Quantity</h4>\n                <h4>Amount</h4>\n            </div>\n            {cartItem.map(item =>\n                <div className=\"cart-item-details\" key={Math.random()}>\n                    <p className=\"cart-item-name\">{item.itemName}</p>\n                    <p>{item.itemQty}</p>\n                    <p>{item.itemQty * 10}</p>\n                </div>\n            )}\n            {<p style={{ borderTop: \"1px solid gray\", width: \"100%\", marginTop: \"10px\", marginBottom: 0 }}></p>}\n            {<div style={{ marginTop: \"0px\" }}>\n                <h3 style={{ margin: 0, marginLeft: \"58%\", marginTop: \"10px\" }}>Total Amount = <span style={{ fontWeight: 300 }}>{totalAmount}</span></h3>\n            </div>}\n            <div className=\"delete_order_icon\" onClick={() => props.delete_order_by_id(orderId)} > <i className=\"fas fa-trash\"></i></div>\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux'\nimport Admin from '.';\nimport { createOrder, emptyCart } from \"../../actions/index\";\nimport { addToCart } from \"../../actions/index\"\nimport \"../SalesExecutive/createOrder\"\n\n\n\nconst CreateAdminOrder = ({ create_order, add_to_cart, cartItem, empty_cart }) => {\n    const [customerName, setCustomerName] = useState('')\n    const [contactNumber, setContactNumber] = useState('')\n    const [addToCartName, setAddToCartName] = useState('');\n    const [addToCartQty, setAddToCartQty] = useState('');\n\n\n\n    const handleFormSubmit = (e) => {\n        const orderDetails = { customerName: customerName, contactNumber: contactNumber, cartItem: cartItem, orderId: Math.floor((Math.random() * 100000000) + 1) }\n\n        e.preventDefault();\n        e.target[0].value = ''\n        e.target[1].value = ''\n\n        create_order(orderDetails)\n        var allOrders = JSON.parse(localStorage.getItem('allOrders')) || [];\n        allOrders.push(orderDetails);\n        localStorage.setItem('allOrders', JSON.stringify(allOrders));\n\n\n        localStorage.setItem('cartItem', JSON.stringify([]));\n        empty_cart()\n    }\n    const handleAddToCart = (e) => {\n\n        const cartItemDetails = { itemName: addToCartName, itemQty: addToCartQty }\n\n        cartItem = JSON.parse(localStorage.getItem('cartItem')) || [];\n        cartItem.push(cartItemDetails);\n        localStorage.setItem('cartItem', JSON.stringify(cartItem));\n        add_to_cart(cartItemDetails);\n    }\n    // Total amount\n    const totalAmount = cartItem.reduce(function (sum, current) {\n        return sum + (current.itemQty) * 10;\n    }, 0);\n\n    return (<div className=\"add-medicine\">\n        <Admin />\n        <h1 style={{ margin: \"20px\", textAlign: \"center\", marginLeft: \"14%\" }}>Make an Order</h1>\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <div className=\"add_to_cart\">\n                <label type=\"text\" onChange={(e) => setAddToCartName(e.target.value)}>Medicine <input className=\"form_controls \" /></label>\n                <label type=\"Number\" onChange={(e) => setAddToCartQty(e.target.value)}>Quantity <input type=\"Number\" className=\"form_controls \" /></label>\n                <p>Price per unit {20}</p>\n                <button className=\"btn \" onClick={handleAddToCart}>Add to Cart</button>\n            </div>\n            <form className=\"create_order_form\" onSubmit={handleFormSubmit}>\n                <div className=\"executive_details\">\n                    <div className=\"form_groups\">\n                        <label htmlFor=\"customerName\">Customer Name</label>\n                        <input type=\"text\" className=\"form_controls\" id=\"customerName\" placeholder=\"Cutsomer name\" onChange={(e) => { setCustomerName(e.target.value) }} required />\n                    </div>\n                    <div className=\"form_groups\">\n                        <label htmlFor=\"contactNumber\">Contact Number</label>\n                        <input type=\"text\" className=\"form_controls\" id=\"contactNumber\" placeholder=\"Contact Number\" onChange={(e) => { setContactNumber(e.target.value) }} required />\n                    </div>\n                </div>\n\n                {cartItem.length > 0 && <div className=\"cart-item-header\">\n                    <p className=\"cart-item-name\">Name</p>\n                    <p>Quantity</p>\n                    <p>Amount</p>\n                </div>}\n                {cartItem.map(item =>\n                    <div className=\"cart-item-details\" key={Math.random()}>\n                        <p className=\"cart-item-name\">{item.itemName}</p>\n                        <p>{item.itemQty}</p>\n                        <p>{item.itemQty * 10}</p>\n                    </div>\n                )}\n                {cartItem.length > 0 && <p style={{ borderTop: \"1px solid gray\", width: \"500px\", marginTop: \"10px\", marginBottom: 0 }}></p>}\n                {cartItem.length > 0 && <div style={{ marginTop: \"0px\" }}>\n                    <h3 style={{ margin: 0, marginLeft: \"160px\" }}>Total Amount = <span style={{ fontWeight: 300 }}>{totalAmount}</span></h3>\n                </div>}\n\n                <button type=\"submit\" className=\"btn \">Create Order</button>\n                <p className=\"clear-cart-button\" onClick={() => {\n                    empty_cart()\n                }}>Clear Cart</p>\n\n            </form>\n        </div>\n    </div >);\n}\n\n\nconst mapStateToProps = (state) => ({\n    cartItem: state.cartItem\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    create_order: (payload) => dispatch(createOrder(payload)),\n    add_to_cart: (payload) => dispatch(addToCart(payload)),\n    empty_cart: () => dispatch(emptyCart())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateAdminOrder)\n","import './App.css';\nimport React from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n// import 'antd/dist/antd.css';\nimport Topbar from './components/Topbar';\nimport Home from './components/Home';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport AddMedicine from './components/Admin/addMedicine';\nimport ViewInventory from './components/Admin/viewInventory';\nimport ViewTeam from './components/Admin/viewTeam';\nimport SalesExecutive from './components/Admin/addSalesExecutive';\nimport ViewOrders from './components/SalesExecutive/viewOrders';\nimport CreateExecutiveOrder from \"./components/SalesExecutive/createOrder\"\nimport ShowAllOrders from './components/Admin/showAllOrders';\nimport CreateAdminOrder from \"./components/Admin/createOrder\"\n\n\nfunction App({ adminLogin, loginStatus, salesLogin }) {\n  return (\n    <div>\n      <Router>\n        <Topbar />\n        {console.log(adminLogin, loginStatus)}\n        <Switch>\n          <Route path=\"/\" exact><Home /></Route>\n          <Route path=\"/login\" exact><Home /></Route>\n          {adminLogin && loginStatus && <Route path=\"/\" exact><AddMedicine /> </Route>}\n          {adminLogin && loginStatus && <Route path=\"/admin/add_medicine\"><AddMedicine /> </Route>}\n          {adminLogin && loginStatus && <Route path=\"/admin/view_inventory\"><ViewInventory /> </Route>}\n          {adminLogin && loginStatus && <Route path=\"/admin/add_sales_executive\"><SalesExecutive /> </Route>}\n          {adminLogin && loginStatus && <Route path=\"/admin/view_team\"><ViewTeam /> </Route>}\n          {adminLogin && loginStatus && <Route path=\"/admin/show_all_orders\"><ShowAllOrders /> </Route>}\n          {adminLogin && loginStatus && <Route path=\"/admin/create_orders\"><CreateAdminOrder /> </Route>}\n          {salesLogin && loginStatus && <Route path=\"/sales_executive/create_order\"><CreateExecutiveOrder /></Route>}\n          {salesLogin && loginStatus && <Route path=\"/sales_executive/view_orders\"><ViewOrders /> </Route>}\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = (state) => ({\n  adminLogin: state.adminLogin,\n  loginStatus: state.loginStatus,\n  salesLogin: state.salesLogin\n})\n\n\nexport default connect(mapStateToProps, null)(App)\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_MEDICINE, ADD_SALES_EXECUTIVE, ADD_TO_CART, ADMIN_LOGIN, ADMIN_LOGOUT, CREATE_ORDER, EMPTY_CART, MEDICINE_ID_FOR_UPDATE, SALES_LOGIN, SALES_LOGOUT, UPDATE_ALL_ORDERS, UPDATE_EXECUTIVE_DETAILS, UPDATE_INVENTORY_DETAILS, UPDATE_INVENTORY_LIST, UPDATE_MEDICINE_DETAILS, UPDATE_TEAM_LIST, USER_ID_FOR_UPDATE } from \"../actionTypes\"\n\nconst initialState = {\n    loginStatus: localStorage.getItem('loginStatus') === 'true' ? true : false,\n    adminLogin: localStorage.getItem('adminLogin') === 'true' ? true : false,\n    salesLogin: localStorage.getItem('salesLogin') === 'true' ? true : false,\n    inventoryList: JSON.parse(localStorage.getItem('inventoryList')) || [],\n    teamList: JSON.parse(localStorage.getItem('teamList')) || [],\n    allOrders: JSON.parse(localStorage.getItem('allOrders')) || [],\n    cartItem: JSON.parse(localStorage.getItem('cartItem')) || [],\n    userIdForUpdate: localStorage.getItem('userIdForUpdate'),\n    medicineIdForUpdate: localStorage.getItem('medicineIdForUpdate'),\n}\n\nconst loginReducer = (state = initialState, { type, payload }) => {\n    switch (type) {\n        case ADMIN_LOGIN:\n            return { ...state, loginStatus: true, adminLogin: true, }\n        case ADMIN_LOGOUT:\n            return { ...state, loginStatus: false, adminLogin: false }\n        case SALES_LOGIN:\n            return { ...state, loginStatus: true, salesLogin: true }\n        case SALES_LOGOUT:\n            return { ...state, loginStatus: false, salesLogin: false }\n        case ADD_MEDICINE:\n            return { ...state, inventoryList: [...state.inventoryList, payload] }\n        case ADD_SALES_EXECUTIVE:\n            return { ...state, teamList: [...state.teamList, payload] }\n        case CREATE_ORDER:\n            return { ...state, allOrders: [...state.allOrders, payload] }\n        case ADD_TO_CART:\n            return { ...state, cartItem: [...state.cartItem, payload] }\n        case EMPTY_CART:\n            return { ...state, cartItem: [] }\n        case UPDATE_INVENTORY_LIST:\n            return { ...state, inventoryList: state.inventoryList.filter(item => item.medicineName !== payload) }\n        case UPDATE_TEAM_LIST:\n            return { ...state, teamList: state.teamList.filter(item => item.salesExecutiveId !== payload) }\n        case UPDATE_ALL_ORDERS:\n            return { ...state, allOrders: state.allOrders.filter(item => item.orderId !== payload) }\n        case UPDATE_EXECUTIVE_DETAILS:\n            return { ...state, teamList: payload }\n        case UPDATE_INVENTORY_DETAILS:\n            return { ...state, inventoryList: payload }\n        case MEDICINE_ID_FOR_UPDATE:\n            return { ...state, medicineIdForUpdate: payload }\n        case USER_ID_FOR_UPDATE:\n            return { ...state, userIdForUpdate: payload }\n        default:\n            return state\n    }\n}\n\n\nexport default loginReducer","import { createStore } from 'redux';\nimport reducer from '../reducer'\n\nconst store = createStore(reducer);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}